// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: app-client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from app-client.proto</summary>
  public static partial class AppClientReflection {

    #region Descriptor
    /// <summary>File descriptor for app-client.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppClientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhcHAtY2xpZW50LnByb3RvEhhkaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUa",
            "HGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aCWxvYy5wcm90bxoPYXBw",
            "Y29tbW9uLnByb3RvIrYCChVSZWdpc3RlckNsaWVudFJlcXVlc3QSCwoDdmVy",
            "GAEgASgNEhAKCG9yZ19uYW1lGAIgASgJEhAKCGFwcF9uYW1lGAMgASgJEhAK",
            "CGFwcF92ZXJzGAQgASgJEhQKDGNhcnJpZXJfbmFtZRgFIAEoCRISCgphdXRo",
            "X3Rva2VuGAYgASgJEg8KB2NlbGxfaWQYByABKA0SFgoOdW5pcXVlX2lkX3R5",
            "cGUYCCABKAkSEQoJdW5pcXVlX2lkGAkgASgJEkcKBHRhZ3MYZCADKAsyOS5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuUmVnaXN0ZXJDbGllbnRSZXF1ZXN0",
            "LlRhZ3NFbnRyeRorCglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgJOgI4ASKqAgoTUmVnaXN0ZXJDbGllbnRSZXBseRILCgN2ZXIYASAB",
            "KA0SNQoGc3RhdHVzGAIgASgOMiUuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5l",
            "LlJlcGx5U3RhdHVzEhYKDnNlc3Npb25fY29va2llGAMgASgJEhgKEHRva2Vu",
            "X3NlcnZlcl91cmkYBCABKAkSFgoOdW5pcXVlX2lkX3R5cGUYBSABKAkSEQoJ",
            "dW5pcXVlX2lkGAYgASgJEkUKBHRhZ3MYZCADKAsyNy5kaXN0cmlidXRlZF9t",
            "YXRjaF9lbmdpbmUuUmVnaXN0ZXJDbGllbnRSZXBseS5UYWdzRW50cnkaKwoJ",
            "VGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEixQIK",
            "E0ZpbmRDbG91ZGxldFJlcXVlc3QSCwoDdmVyGAEgASgNEhYKDnNlc3Npb25f",
            "Y29va2llGAIgASgJEhQKDGNhcnJpZXJfbmFtZRgDIAEoCRIzCgxncHNfbG9j",
            "YXRpb24YBCABKAsyHS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTG9jEg8K",
            "B2NlbGxfaWQYCCABKA0SOQoLZGV2aWNlX2luZm8YByABKAsyJC5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuRGV2aWNlSW5mbxJFCgR0YWdzGGQgAygLMjcu",
            "ZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkZpbmRDbG91ZGxldFJlcXVlc3Qu",
            "VGFnc0VudHJ5GisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIuoBChtQbGF0Zm9ybUZpbmRDbG91ZGxldFJlcXVlc3QSCwoD",
            "dmVyGAEgASgNEhYKDnNlc3Npb25fY29va2llGAIgASgJEhQKDGNhcnJpZXJf",
            "bmFtZRgDIAEoCRIUCgxjbGllbnRfdG9rZW4YBCABKAkSTQoEdGFncxhkIAMo",
            "CzI/LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5QbGF0Zm9ybUZpbmRDbG91",
            "ZGxldFJlcXVlc3QuVGFnc0VudHJ5GisKCVRhZ3NFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAk6AjgBIrMDChFGaW5kQ2xvdWRsZXRSZXBseRIL",
            "CgN2ZXIYASABKA0SRgoGc3RhdHVzGAIgASgOMjYuZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkZpbmRDbG91ZGxldFJlcGx5LkZpbmRTdGF0dXMSDAoEZnFk",
            "bhgDIAEoCRIwCgVwb3J0cxgEIAMoCzIhLmRpc3RyaWJ1dGVkX21hdGNoX2Vu",
            "Z2luZS5BcHBQb3J0EjgKEWNsb3VkbGV0X2xvY2F0aW9uGAUgASgLMh0uZGlz",
            "dHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxIaChJlZGdlX2V2ZW50c19jb29r",
            "aWUYBiABKAkSQwoEdGFncxhkIAMoCzI1LmRpc3RyaWJ1dGVkX21hdGNoX2Vu",
            "Z2luZS5GaW5kQ2xvdWRsZXRSZXBseS5UYWdzRW50cnkaKwoJVGFnc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiQQoKRmluZFN0YXR1",
            "cxIQCgxGSU5EX1VOS05PV04QABIOCgpGSU5EX0ZPVU5EEAESEQoNRklORF9O",
            "T1RGT1VORBACIqgCChVWZXJpZnlMb2NhdGlvblJlcXVlc3QSCwoDdmVyGAEg",
            "ASgNEhYKDnNlc3Npb25fY29va2llGAIgASgJEhQKDGNhcnJpZXJfbmFtZRgD",
            "IAEoCRIzCgxncHNfbG9jYXRpb24YBCABKAsyHS5kaXN0cmlidXRlZF9tYXRj",
            "aF9lbmdpbmUuTG9jEhgKEHZlcmlmeV9sb2NfdG9rZW4YBSABKAkSDwoHY2Vs",
            "bF9pZBgGIAEoDRJHCgR0YWdzGGQgAygLMjkuZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLlZlcmlmeUxvY2F0aW9uUmVxdWVzdC5UYWdzRW50cnkaKwoJVGFn",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiuwUKE1Zl",
            "cmlmeUxvY2F0aW9uUmVwbHkSCwoDdmVyGAEgASgNEk8KDHRvd2VyX3N0YXR1",
            "cxgCIAEoDjI5LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5WZXJpZnlMb2Nh",
            "dGlvblJlcGx5LlRvd2VyU3RhdHVzElwKE2dwc19sb2NhdGlvbl9zdGF0dXMY",
            "AyABKA4yPy5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuVmVyaWZ5TG9jYXRp",
            "b25SZXBseS5HUFNMb2NhdGlvblN0YXR1cxIgChhncHNfbG9jYXRpb25fYWNj",
            "dXJhY3lfa20YBCABKAESRQoEdGFncxhkIAMoCzI3LmRpc3RyaWJ1dGVkX21h",
            "dGNoX2VuZ2luZS5WZXJpZnlMb2NhdGlvblJlcGx5LlRhZ3NFbnRyeRorCglU",
            "YWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJoCgtU",
            "b3dlclN0YXR1cxIRCg1UT1dFUl9VTktOT1dOEAASIAocQ09OTkVDVEVEX1RP",
            "X1NQRUNJRklFRF9UT1dFUhABEiQKIE5PVF9DT05ORUNURURfVE9fU1BFQ0lG",
            "SUVEX1RPV0VSEAIi5wEKEUdQU0xvY2F0aW9uU3RhdHVzEg8KC0xPQ19VTktO",
            "T1dOEAASEAoMTE9DX1ZFUklGSUVEEAESHQoZTE9DX01JU01BVENIX1NBTUVf",
            "Q09VTlRSWRACEh4KGkxPQ19NSVNNQVRDSF9PVEhFUl9DT1VOVFJZEAMSHQoZ",
            "TE9DX1JPQU1JTkdfQ09VTlRSWV9NQVRDSBAEEiAKHExPQ19ST0FNSU5HX0NP",
            "VU5UUllfTUlTTUFUQ0gQBRIaChZMT0NfRVJST1JfVU5BVVRIT1JJWkVEEAYS",
            "EwoPTE9DX0VSUk9SX09USEVSEAci0wEKEkdldExvY2F0aW9uUmVxdWVzdBIL",
            "CgN2ZXIYASABKA0SFgoOc2Vzc2lvbl9jb29raWUYAiABKAkSFAoMY2Fycmll",
            "cl9uYW1lGAMgASgJEg8KB2NlbGxfaWQYBCABKA0SRAoEdGFncxhkIAMoCzI2",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5HZXRMb2NhdGlvblJlcXVlc3Qu",
            "VGFnc0VudHJ5GisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIvECChBHZXRMb2NhdGlvblJlcGx5EgsKA3ZlchgBIAEoDRJE",
            "CgZzdGF0dXMYAiABKA4yNC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuR2V0",
            "TG9jYXRpb25SZXBseS5Mb2NTdGF0dXMSFAoMY2Fycmllcl9uYW1lGAMgASgJ",
            "Eg0KBXRvd2VyGAQgASgEEjcKEG5ldHdvcmtfbG9jYXRpb24YBSABKAsyHS5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuTG9jEkIKBHRhZ3MYZCADKAsyNC5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuR2V0TG9jYXRpb25SZXBseS5UYWdz",
            "RW50cnkaKwoJVGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEiOwoJTG9jU3RhdHVzEg8KC0xPQ19VTktOT1dOEAASDQoJTE9DX0ZP",
            "VU5EEAESDgoKTE9DX0RFTklFRBACIpcCChJBcHBJbnN0TGlzdFJlcXVlc3QS",
            "CwoDdmVyGAEgASgNEhYKDnNlc3Npb25fY29va2llGAIgASgJEhQKDGNhcnJp",
            "ZXJfbmFtZRgDIAEoCRIzCgxncHNfbG9jYXRpb24YBCABKAsyHS5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuTG9jEg8KB2NlbGxfaWQYBSABKA0SDQoFbGlt",
            "aXQYBiABKA0SRAoEdGFncxhkIAMoCzI2LmRpc3RyaWJ1dGVkX21hdGNoX2Vu",
            "Z2luZS5BcHBJbnN0TGlzdFJlcXVlc3QuVGFnc0VudHJ5GisKCVRhZ3NFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIoMBCgtBcHBpbnN0",
            "YW5jZRIQCghhcHBfbmFtZRgBIAEoCRIQCghhcHBfdmVycxgCIAEoCRIMCgRm",
            "cWRuGAMgASgJEjAKBXBvcnRzGAQgAygLMiEuZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLkFwcFBvcnQSEAoIb3JnX25hbWUYBSABKAkiwwEKEENsb3VkbGV0",
            "TG9jYXRpb24SFAoMY2Fycmllcl9uYW1lGAEgASgJEhUKDWNsb3VkbGV0X25h",
            "bWUYAiABKAkSMwoMZ3BzX2xvY2F0aW9uGAMgASgLMh0uZGlzdHJpYnV0ZWRf",
            "bWF0Y2hfZW5naW5lLkxvYxIQCghkaXN0YW5jZRgEIAEoARI7CgxhcHBpbnN0",
            "YW5jZXMYBSADKAsyJS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBwaW5z",
            "dGFuY2UizwIKEEFwcEluc3RMaXN0UmVwbHkSCwoDdmVyGAEgASgNEkMKBnN0",
            "YXR1cxgCIAEoDjIzLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5BcHBJbnN0",
            "TGlzdFJlcGx5LkFJU3RhdHVzEj0KCWNsb3VkbGV0cxgDIAMoCzIqLmRpc3Ry",
            "aWJ1dGVkX21hdGNoX2VuZ2luZS5DbG91ZGxldExvY2F0aW9uEkIKBHRhZ3MY",
            "ZCADKAsyNC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBwSW5zdExpc3RS",
            "ZXBseS5UYWdzRW50cnkaKwoJVGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEiOQoIQUlTdGF0dXMSEAoMQUlfVU5ERUZJTkVEEAAS",
            "DgoKQUlfU1VDQ0VTUxABEgsKB0FJX0ZBSUwQAiK3AQoPRnFkbkxpc3RSZXF1",
            "ZXN0EgsKA3ZlchgBIAEoDRIWCg5zZXNzaW9uX2Nvb2tpZRgCIAEoCRIPCgdj",
            "ZWxsX2lkGAMgASgNEkEKBHRhZ3MYZCADKAsyMy5kaXN0cmlidXRlZF9tYXRj",
            "aF9lbmdpbmUuRnFkbkxpc3RSZXF1ZXN0LlRhZ3NFbnRyeRorCglUYWdzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJsCgdBcHBGcWRu",
            "EhAKCGFwcF9uYW1lGAEgASgJEhAKCGFwcF92ZXJzGAIgASgJEhAKCG9yZ19u",
            "YW1lGAMgASgJEg0KBWZxZG5zGAQgAygJEhwKFGFuZHJvaWRfcGFja2FnZV9u",
            "YW1lGAUgASgJIr0CCg1GcWRuTGlzdFJlcGx5EgsKA3ZlchgBIAEoDRI0Cglh",
            "cHBfZnFkbnMYAyADKAsyIS5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBw",
            "RnFkbhJACgZzdGF0dXMYBCABKA4yMC5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuRnFkbkxpc3RSZXBseS5GTFN0YXR1cxI/CgR0YWdzGGQgAygLMjEuZGlz",
            "dHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkZxZG5MaXN0UmVwbHkuVGFnc0VudHJ5",
            "GisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "IjkKCEZMU3RhdHVzEhAKDEZMX1VOREVGSU5FRBAAEg4KCkZMX1NVQ0NFU1MQ",
            "ARILCgdGTF9GQUlMEAIi6QEKFkFwcE9mZmljaWFsRnFkblJlcXVlc3QSCwoD",
            "dmVyGAEgASgNEhYKDnNlc3Npb25fY29va2llGAIgASgJEjMKDGdwc19sb2Nh",
            "dGlvbhgDIAEoCzIdLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5Mb2MSSAoE",
            "dGFncxhkIAMoCzI6LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5BcHBPZmZp",
            "Y2lhbEZxZG5SZXF1ZXN0LlRhZ3NFbnRyeRorCglUYWdzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKEAwoUQXBwT2ZmaWNpYWxGcWRu",
            "UmVwbHkSCwoDdmVyGAEgASgNEhkKEWFwcF9vZmZpY2lhbF9mcWRuGAIgASgJ",
            "EhQKDGNsaWVudF90b2tlbhgDIAEoCRJICgZzdGF0dXMYBCABKA4yOC5kaXN0",
            "cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBwT2ZmaWNpYWxGcWRuUmVwbHkuQU9G",
            "U3RhdHVzEjAKBXBvcnRzGAUgAygLMiEuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5n",
            "aW5lLkFwcFBvcnQSRgoEdGFncxhkIAMoCzI4LmRpc3RyaWJ1dGVkX21hdGNo",
            "X2VuZ2luZS5BcHBPZmZpY2lhbEZxZG5SZXBseS5UYWdzRW50cnkaKwoJVGFn",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiPQoJQU9G",
            "U3RhdHVzEhEKDUFPRl9VTkRFRklORUQQABIPCgtBT0ZfU1VDQ0VTUxABEgwK",
            "CEFPRl9GQUlMEAIi+AIKFkR5bmFtaWNMb2NHcm91cFJlcXVlc3QSCwoDdmVy",
            "GAEgASgNEhYKDnNlc3Npb25fY29va2llGAIgASgJEg0KBWxnX2lkGAMgASgE",
            "Ek8KCWNvbW1fdHlwZRgLIAEoDjI8LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5EeW5hbWljTG9jR3JvdXBSZXF1ZXN0LkRsZ0NvbW1UeXBlEhEKCXVzZXJf",
            "ZGF0YRgMIAEoCRIPCgdjZWxsX2lkGA0gASgNEkgKBHRhZ3MYZCADKAsyOi5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRHluYW1pY0xvY0dyb3VwUmVxdWVz",
            "dC5UYWdzRW50cnkaKwoJVGFnc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiPgoLRGxnQ29tbVR5cGUSEQoNRExHX1VOREVGSU5FRBAA",
            "Eg4KCkRMR19TRUNVUkUQARIMCghETEdfT1BFThACIvkBChREeW5hbWljTG9j",
            "R3JvdXBSZXBseRILCgN2ZXIYASABKA0SNQoGc3RhdHVzGAIgASgOMiUuZGlz",
            "dHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlJlcGx5U3RhdHVzEhIKCmVycm9yX2Nv",
            "ZGUYAyABKA0SFAoMZ3JvdXBfY29va2llGAUgASgJEkYKBHRhZ3MYZCADKAsy",
            "OC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRHluYW1pY0xvY0dyb3VwUmVw",
            "bHkuVGFnc0VudHJ5GisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAk6AjgBIlYKC1Fvc1Bvc2l0aW9uEhIKCnBvc2l0aW9uaWQYASAB",
            "KAMSMwoMZ3BzX2xvY2F0aW9uGAIgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hf",
            "ZW5naW5lLkxvYyJPCg1CYW5kU2VsZWN0aW9uEg4KBnJhdF8yZxgBIAMoCRIO",
            "CgZyYXRfM2cYAiADKAkSDgoGcmF0XzRnGAMgAygJEg4KBnJhdF81ZxgEIAMo",
            "CSLOAgoSUW9zUG9zaXRpb25SZXF1ZXN0EgsKA3ZlchgBIAEoDRIWCg5zZXNz",
            "aW9uX2Nvb2tpZRgCIAEoCRI4Cglwb3NpdGlvbnMYAyADKAsyJS5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuUW9zUG9zaXRpb24SFAoMbHRlX2NhdGVnb3J5",
            "GAQgASgFEj8KDmJhbmRfc2VsZWN0aW9uGAUgASgLMicuZGlzdHJpYnV0ZWRf",
            "bWF0Y2hfZW5naW5lLkJhbmRTZWxlY3Rpb24SDwoHY2VsbF9pZBgGIAEoDRJE",
            "CgR0YWdzGGQgAygLMjYuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlFvc1Bv",
            "c2l0aW9uUmVxdWVzdC5UYWdzRW50cnkaKwoJVGFnc0VudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi0gIKFFFvc1Bvc2l0aW9uS3BpUmVz",
            "dWx0EhIKCnBvc2l0aW9uaWQYASABKAMSMwoMZ3BzX2xvY2F0aW9uGAIgASgL",
            "Mh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxIcChRkbHVzZXJ0aHJv",
            "dWdocHV0X21pbhgDIAEoAhIcChRkbHVzZXJ0aHJvdWdocHV0X2F2ZxgEIAEo",
            "AhIcChRkbHVzZXJ0aHJvdWdocHV0X21heBgFIAEoAhIcChR1bHVzZXJ0aHJv",
            "dWdocHV0X21pbhgGIAEoAhIcChR1bHVzZXJ0aHJvdWdocHV0X2F2ZxgHIAEo",
            "AhIcChR1bHVzZXJ0aHJvdWdocHV0X21heBgIIAEoAhITCgtsYXRlbmN5X21p",
            "bhgJIAEoAhITCgtsYXRlbmN5X2F2ZxgKIAEoAhITCgtsYXRlbmN5X21heBgL",
            "IAEoAiKXAgoTUW9zUG9zaXRpb25LcGlSZXBseRILCgN2ZXIYASABKA0SNQoG",
            "c3RhdHVzGAIgASgOMiUuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlJlcGx5",
            "U3RhdHVzEkgKEHBvc2l0aW9uX3Jlc3VsdHMYAyADKAsyLi5kaXN0cmlidXRl",
            "ZF9tYXRjaF9lbmdpbmUuUW9zUG9zaXRpb25LcGlSZXN1bHQSRQoEdGFncxhk",
            "IAMoCzI3LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5Rb3NQb3NpdGlvbktw",
            "aVJlcGx5LlRhZ3NFbnRyeRorCglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ASKDBQoPQ2xpZW50RWRnZUV2ZW50EhYKDnNlc3Np",
            "b25fY29va2llGAEgASgJEhoKEmVkZ2VfZXZlbnRzX2Nvb2tpZRgCIAEoCRJN",
            "CgpldmVudF90eXBlGAMgASgOMjkuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5l",
            "LkNsaWVudEVkZ2VFdmVudC5DbGllbnRFdmVudFR5cGUSMwoMZ3BzX2xvY2F0",
            "aW9uGAQgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxIxCgdz",
            "YW1wbGVzGAUgAygLMiAuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlNhbXBs",
            "ZRIUCgxjYXJyaWVyX25hbWUYBiABKAkSOQoLZGV2aWNlX2luZm8YByABKAsy",
            "JC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuRGV2aWNlSW5mbxIUCgxjdXN0",
            "b21fZXZlbnQYCCABKAkSQQoEdGFncxhkIAMoCzIzLmRpc3RyaWJ1dGVkX21h",
            "dGNoX2VuZ2luZS5DbGllbnRFZGdlRXZlbnQuVGFnc0VudHJ5GisKCVRhZ3NF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIq0BCg9DbGll",
            "bnRFdmVudFR5cGUSEQoNRVZFTlRfVU5LTk9XThAAEhkKFUVWRU5UX0lOSVRf",
            "Q09OTkVDVElPThABEh4KGkVWRU5UX1RFUk1JTkFURV9DT05ORUNUSU9OEAIS",
            "GQoVRVZFTlRfTEFURU5DWV9TQU1QTEVTEAMSGQoVRVZFTlRfTE9DQVRJT05f",
            "VVBEQVRFEAQSFgoSRVZFTlRfQ1VTVE9NX0VWRU5UEAUi+wUKD1NlcnZlckVk",
            "Z2VFdmVudBJNCgpldmVudF90eXBlGAEgASgOMjkuZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLlNlcnZlckVkZ2VFdmVudC5TZXJ2ZXJFdmVudFR5cGUSPwoO",
            "Y2xvdWRsZXRfc3RhdGUYAiABKA4yJy5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuQ2xvdWRsZXRTdGF0ZRJFChFtYWludGVuYW5jZV9zdGF0ZRgDIAEoDjIq",
            "LmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5NYWludGVuYW5jZVN0YXRlEjsK",
            "DGhlYWx0aF9jaGVjaxgEIAEoDjIlLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5IZWFsdGhDaGVjaxI4CgpzdGF0aXN0aWNzGAUgASgLMiQuZGlzdHJpYnV0",
            "ZWRfbWF0Y2hfZW5naW5lLlN0YXRpc3RpY3MSQQoMbmV3X2Nsb3VkbGV0GAYg",
            "ASgLMisuZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkZpbmRDbG91ZGxldFJl",
            "cGx5EkEKBHRhZ3MYZCADKAsyMy5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUu",
            "U2VydmVyRWRnZUV2ZW50LlRhZ3NFbnRyeRorCglUYWdzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLmAQoPU2VydmVyRXZlbnRUeXBl",
            "EhEKDUVWRU5UX1VOS05PV04QABIZChVFVkVOVF9JTklUX0NPTk5FQ1RJT04Q",
            "ARIZChVFVkVOVF9MQVRFTkNZX1JFUVVFU1QQAhIbChdFVkVOVF9MQVRFTkNZ",
            "X1BST0NFU1NFRBADEhgKFEVWRU5UX0NMT1VETEVUX1NUQVRFEAQSHgoaRVZF",
            "TlRfQ0xPVURMRVRfTUFJTlRFTkFOQ0UQBRIYChRFVkVOVF9BUFBJTlNUX0hF",
            "QUxUSBAGEhkKFUVWRU5UX0NMT1VETEVUX1VQREFURRAHKj0KB0lEVHlwZXMS",
            "EAoMSURfVU5ERUZJTkVEEAASCAoESU1FSRABEgoKBk1TSVNEThACEgoKBklQ",
            "QUREUhADKjwKC1JlcGx5U3RhdHVzEhAKDFJTX1VOREVGSU5FRBAAEg4KClJT",
            "X1NVQ0NFU1MQARILCgdSU19GQUlMEAIyxgwKDk1hdGNoRW5naW5lQXBpEo8B",
            "Cg5SZWdpc3RlckNsaWVudBIvLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5S",
            "ZWdpc3RlckNsaWVudFJlcXVlc3QaLS5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuUmVnaXN0ZXJDbGllbnRSZXBseSIdgtPkkwIXIhIvdjEvcmVnaXN0ZXJj",
            "bGllbnQ6ASoShwEKDEZpbmRDbG91ZGxldBItLmRpc3RyaWJ1dGVkX21hdGNo",
            "X2VuZ2luZS5GaW5kQ2xvdWRsZXRSZXF1ZXN0GisuZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkZpbmRDbG91ZGxldFJlcGx5IhuC0+STAhUiEC92MS9maW5k",
            "Y2xvdWRsZXQ6ASoSnwEKFFBsYXRmb3JtRmluZENsb3VkbGV0EjUuZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLlBsYXRmb3JtRmluZENsb3VkbGV0UmVxdWVz",
            "dBorLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5GaW5kQ2xvdWRsZXRSZXBs",
            "eSIjgtPkkwIdIhgvdjEvcGxhdGZvcm1maW5kY2xvdWRsZXQ6ASoSjwEKDlZl",
            "cmlmeUxvY2F0aW9uEi8uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlZlcmlm",
            "eUxvY2F0aW9uUmVxdWVzdBotLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZS5W",
            "ZXJpZnlMb2NhdGlvblJlcGx5Ih2C0+STAhciEi92MS92ZXJpZnlsb2NhdGlv",
            "bjoBKhKDAQoLR2V0TG9jYXRpb24SLC5kaXN0cmlidXRlZF9tYXRjaF9lbmdp",
            "bmUuR2V0TG9jYXRpb25SZXF1ZXN0GiouZGlzdHJpYnV0ZWRfbWF0Y2hfZW5n",
            "aW5lLkdldExvY2F0aW9uUmVwbHkiGoLT5JMCFCIPL3YxL2dldGxvY2F0aW9u",
            "OgEqEpEBCg5BZGRVc2VyVG9Hcm91cBIwLmRpc3RyaWJ1dGVkX21hdGNoX2Vu",
            "Z2luZS5EeW5hbWljTG9jR3JvdXBSZXF1ZXN0Gi4uZGlzdHJpYnV0ZWRfbWF0",
            "Y2hfZW5naW5lLkR5bmFtaWNMb2NHcm91cFJlcGx5Ih2C0+STAhciEi92MS9h",
            "ZGR1c2VydG9ncm91cDoBKhKJAQoOR2V0QXBwSW5zdExpc3QSLC5kaXN0cmli",
            "dXRlZF9tYXRjaF9lbmdpbmUuQXBwSW5zdExpc3RSZXF1ZXN0GiouZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLkFwcEluc3RMaXN0UmVwbHkiHYLT5JMCFyIS",
            "L3YxL2dldGFwcGluc3RsaXN0OgEqEn0KC0dldEZxZG5MaXN0EikuZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLkZxZG5MaXN0UmVxdWVzdBonLmRpc3RyaWJ1",
            "dGVkX21hdGNoX2VuZ2luZS5GcWRuTGlzdFJlcGx5IhqC0+STAhQiDy92MS9n",
            "ZXRmcWRubGlzdDoBKhKZAQoSR2V0QXBwT2ZmaWNpYWxGcWRuEjAuZGlzdHJp",
            "YnV0ZWRfbWF0Y2hfZW5naW5lLkFwcE9mZmljaWFsRnFkblJlcXVlc3QaLi5k",
            "aXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuQXBwT2ZmaWNpYWxGcWRuUmVwbHki",
            "IYLT5JMCGyIWL3YxL2dldGFwcG9mZmljaWFsZnFkbjoBKhKUAQoRR2V0UW9z",
            "UG9zaXRpb25LcGkSLC5kaXN0cmlidXRlZF9tYXRjaF9lbmdpbmUuUW9zUG9z",
            "aXRpb25SZXF1ZXN0Gi0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLlFvc1Bv",
            "c2l0aW9uS3BpUmVwbHkiIILT5JMCGiIVL3YxL2dldHFvc3Bvc2l0aW9ua3Bp",
            "OgEqMAESiwEKD1N0cmVhbUVkZ2VFdmVudBIpLmRpc3RyaWJ1dGVkX21hdGNo",
            "X2VuZ2luZS5DbGllbnRFZGdlRXZlbnQaKS5kaXN0cmlidXRlZF9tYXRjaF9l",
            "bmdpbmUuU2VydmVyRWRnZUV2ZW50Ih6C0+STAhgiEy92MS9zdHJlYW1lZGdl",
            "ZXZlbnQ6ASooATABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::DistributedMatchEngine.LocReflection.Descriptor, global::DistributedMatchEngine.AppcommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DistributedMatchEngine.IDTypes), typeof(global::DistributedMatchEngine.ReplyStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientRequest), global::DistributedMatchEngine.RegisterClientRequest.Parser, new[]{ "Ver", "OrgName", "AppName", "AppVers", "CarrierName", "AuthToken", "CellId", "UniqueIdType", "UniqueId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.RegisterClientReply), global::DistributedMatchEngine.RegisterClientReply.Parser, new[]{ "Ver", "Status", "SessionCookie", "TokenServerUri", "UniqueIdType", "UniqueId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletRequest), global::DistributedMatchEngine.FindCloudletRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "CellId", "DeviceInfo", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.PlatformFindCloudletRequest), global::DistributedMatchEngine.PlatformFindCloudletRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "ClientToken", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FindCloudletReply), global::DistributedMatchEngine.FindCloudletReply.Parser, new[]{ "Ver", "Status", "Fqdn", "Ports", "CloudletLocation", "EdgeEventsCookie", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationRequest), global::DistributedMatchEngine.VerifyLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "VerifyLocToken", "CellId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.VerifyLocationReply), global::DistributedMatchEngine.VerifyLocationReply.Parser, new[]{ "Ver", "TowerStatus", "GpsLocationStatus", "GpsLocationAccuracyKm", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus), typeof(global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationRequest), global::DistributedMatchEngine.GetLocationRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "CellId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.GetLocationReply), global::DistributedMatchEngine.GetLocationReply.Parser, new[]{ "Ver", "Status", "CarrierName", "Tower", "NetworkLocation", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.GetLocationReply.Types.LocStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListRequest), global::DistributedMatchEngine.AppInstListRequest.Parser, new[]{ "Ver", "SessionCookie", "CarrierName", "GpsLocation", "CellId", "Limit", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Appinstance), global::DistributedMatchEngine.Appinstance.Parser, new[]{ "AppName", "AppVers", "Fqdn", "Ports", "OrgName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.CloudletLocation), global::DistributedMatchEngine.CloudletLocation.Parser, new[]{ "CarrierName", "CloudletName", "GpsLocation", "Distance", "Appinstances" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppInstListReply), global::DistributedMatchEngine.AppInstListReply.Parser, new[]{ "Ver", "Status", "Cloudlets", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.AppInstListReply.Types.AIStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FqdnListRequest), global::DistributedMatchEngine.FqdnListRequest.Parser, new[]{ "Ver", "SessionCookie", "CellId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppFqdn), global::DistributedMatchEngine.AppFqdn.Parser, new[]{ "AppName", "AppVers", "OrgName", "Fqdns", "AndroidPackageName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.FqdnListReply), global::DistributedMatchEngine.FqdnListReply.Parser, new[]{ "Ver", "AppFqdns", "Status", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.FqdnListReply.Types.FLStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppOfficialFqdnRequest), global::DistributedMatchEngine.AppOfficialFqdnRequest.Parser, new[]{ "Ver", "SessionCookie", "GpsLocation", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.AppOfficialFqdnReply), global::DistributedMatchEngine.AppOfficialFqdnReply.Parser, new[]{ "Ver", "AppOfficialFqdn", "ClientToken", "Status", "Ports", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupRequest), global::DistributedMatchEngine.DynamicLocGroupRequest.Parser, new[]{ "Ver", "SessionCookie", "LgId", "CommType", "UserData", "CellId", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.DynamicLocGroupReply), global::DistributedMatchEngine.DynamicLocGroupReply.Parser, new[]{ "Ver", "Status", "ErrorCode", "GroupCookie", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPosition), global::DistributedMatchEngine.QosPosition.Parser, new[]{ "Positionid", "GpsLocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.BandSelection), global::DistributedMatchEngine.BandSelection.Parser, new[]{ "Rat2G", "Rat3G", "Rat4G", "Rat5G" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionRequest), global::DistributedMatchEngine.QosPositionRequest.Parser, new[]{ "Ver", "SessionCookie", "Positions", "LteCategory", "BandSelection", "CellId", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionKpiResult), global::DistributedMatchEngine.QosPositionKpiResult.Parser, new[]{ "Positionid", "GpsLocation", "DluserthroughputMin", "DluserthroughputAvg", "DluserthroughputMax", "UluserthroughputMin", "UluserthroughputAvg", "UluserthroughputMax", "LatencyMin", "LatencyAvg", "LatencyMax" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.QosPositionKpiReply), global::DistributedMatchEngine.QosPositionKpiReply.Parser, new[]{ "Ver", "Status", "PositionResults", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.ClientEdgeEvent), global::DistributedMatchEngine.ClientEdgeEvent.Parser, new[]{ "SessionCookie", "EdgeEventsCookie", "EventType", "GpsLocation", "Samples", "CarrierName", "DeviceInfo", "CustomEvent", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.ServerEdgeEvent), global::DistributedMatchEngine.ServerEdgeEvent.Parser, new[]{ "EventType", "CloudletState", "MaintenanceState", "HealthCheck", "Statistics", "NewCloudlet", "Tags" }, null, new[]{ typeof(global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum IDTypes {
    [pbr::OriginalName("ID_UNDEFINED")] IdUndefined = 0,
    [pbr::OriginalName("IMEI")] Imei = 1,
    [pbr::OriginalName("MSISDN")] Msisdn = 2,
    [pbr::OriginalName("IPADDR")] Ipaddr = 3,
  }

  public enum ReplyStatus {
    [pbr::OriginalName("RS_UNDEFINED")] RsUndefined = 0,
    [pbr::OriginalName("RS_SUCCESS")] RsSuccess = 1,
    [pbr::OriginalName("RS_FAIL")] RsFail = 2,
  }

  #endregion

  #region Messages
  public sealed partial class RegisterClientRequest : pb::IMessage<RegisterClientRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterClientRequest> _parser = new pb::MessageParser<RegisterClientRequest>(() => new RegisterClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest(RegisterClientRequest other) : this() {
      ver_ = other.ver_;
      orgName_ = other.orgName_;
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      carrierName_ = other.carrierName_;
      authToken_ = other.authToken_;
      cellId_ = other.cellId_;
      uniqueIdType_ = other.uniqueIdType_;
      uniqueId_ = other.uniqueId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientRequest Clone() {
      return new RegisterClientRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "org_name" field.</summary>
    public const int OrgNameFieldNumber = 2;
    private string orgName_ = "";
    /// <summary>
    ///
    /// App Organization Name
    ///
    /// App developer organization name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrgName {
      get { return orgName_; }
      set {
        orgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 3;
    private string appName_ = "";
    /// <summary>
    ///
    /// App Name
    ///
    /// Name of your application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 4;
    private string appVers_ = "";
    /// <summary>
    ///
    /// App Version
    ///
    /// Application version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 5;
    private string carrierName_ = "";
    /// <summary>
    ///
    /// Carrier Name
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 6;
    private string authToken_ = "";
    /// <summary>
    ///
    /// Authentication Token
    ///
    /// _(optional)_ An authentication token supplied by the application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 7;
    private uint cellId_;
    /// <summary>
    ///
    /// Cell ID
    ///
    /// _(optional)_ Cellular ID of where the client is connected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "unique_id_type" field.</summary>
    public const int UniqueIdTypeFieldNumber = 8;
    private string uniqueIdType_ = "";
    /// <summary>
    ///
    /// Unique ID Type
    ///
    /// _(optional)_ Type of unique ID provided by the client.
    /// If left blank, a new Unique ID type will be assigned in the RegisterClient Reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueIdType {
      get { return uniqueIdType_; }
      set {
        uniqueIdType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 9;
    private string uniqueId_ = "";
    /// <summary>
    ///
    /// Unique ID
    ///
    /// _(optional)_ Unique identification of the client device or user. May be overridden by the server.
    /// If left blank, a new Unique ID will be assigned in the RegisterClient Reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    ///
    /// Tags
    ///
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (OrgName != other.OrgName) return false;
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (CarrierName != other.CarrierName) return false;
      if (AuthToken != other.AuthToken) return false;
      if (CellId != other.CellId) return false;
      if (UniqueIdType != other.UniqueIdType) return false;
      if (UniqueId != other.UniqueId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (OrgName.Length != 0) hash ^= OrgName.GetHashCode();
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      if (UniqueIdType.Length != 0) hash ^= UniqueIdType.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (OrgName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrgName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVers);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarrierName);
      }
      if (AuthToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AuthToken);
      }
      if (CellId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(CellId);
      }
      if (UniqueIdType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UniqueId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (OrgName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrgName);
      }
      if (AppName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppVers);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CarrierName);
      }
      if (AuthToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AuthToken);
      }
      if (CellId != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(CellId);
      }
      if (UniqueIdType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UniqueId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (OrgName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrgName);
      }
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthToken);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      if (UniqueIdType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.OrgName.Length != 0) {
        OrgName = other.OrgName;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      if (other.UniqueIdType.Length != 0) {
        UniqueIdType = other.UniqueIdType;
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            OrgName = input.ReadString();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            AppVers = input.ReadString();
            break;
          }
          case 42: {
            CarrierName = input.ReadString();
            break;
          }
          case 50: {
            AuthToken = input.ReadString();
            break;
          }
          case 56: {
            CellId = input.ReadUInt32();
            break;
          }
          case 66: {
            UniqueIdType = input.ReadString();
            break;
          }
          case 74: {
            UniqueId = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            OrgName = input.ReadString();
            break;
          }
          case 26: {
            AppName = input.ReadString();
            break;
          }
          case 34: {
            AppVers = input.ReadString();
            break;
          }
          case 42: {
            CarrierName = input.ReadString();
            break;
          }
          case 50: {
            AuthToken = input.ReadString();
            break;
          }
          case 56: {
            CellId = input.ReadUInt32();
            break;
          }
          case 66: {
            UniqueIdType = input.ReadString();
            break;
          }
          case 74: {
            UniqueId = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegisterClientReply : pb::IMessage<RegisterClientReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterClientReply> _parser = new pb::MessageParser<RegisterClientReply>(() => new RegisterClientReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterClientReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply(RegisterClientReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      sessionCookie_ = other.sessionCookie_;
      tokenServerUri_ = other.tokenServerUri_;
      uniqueIdType_ = other.uniqueIdType_;
      uniqueId_ = other.uniqueId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterClientReply Clone() {
      return new RegisterClientReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = global::DistributedMatchEngine.ReplyStatus.RsUndefined;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 3;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie to be used in later API calls
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_server_uri" field.</summary>
    public const int TokenServerUriFieldNumber = 4;
    private string tokenServerUri_ = "";
    /// <summary>
    /// URI for the Token Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenServerUri {
      get { return tokenServerUri_; }
      set {
        tokenServerUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unique_id_type" field.</summary>
    public const int UniqueIdTypeFieldNumber = 5;
    private string uniqueIdType_ = "";
    /// <summary>
    ///
    /// Unique ID Type
    ///
    /// _(optional)_ Type of unique ID provided by the server
    /// A unique_id_type and unique_id may be provided by the client to be registered.
    /// During registering, if a unique_id_type and unique_id are provided by the client in their request,
    /// the unique_id_type and unique_id will be left blank in the response.
    /// But, if the client does not provide a unique_id_type and unique_id, then the server generates
    /// one and provides the unique_id in the response. If possible, the unique_id should be saved by the
    /// client locally and used for subsequent RegisterClient API calls. Otherwise, a new unique_id will be
    /// generated for further API calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueIdType {
      get { return uniqueIdType_; }
      set {
        uniqueIdType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 6;
    private string uniqueId_ = "";
    /// <summary>
    ///
    /// Unique ID
    ///
    /// _(optional)_ Unique identification of the client device or user
    /// A unique_id_type and unique_id may be provided by the client to be registered.
    /// During registering, if a unique_id_type and unique_id are provided by the client in their request,
    /// the unique_id_type and unique_id will be left blank in the response.
    /// But, if the client does not provide a unique_id_type and unique_id, then the server generates
    /// one and provides the unique_id in the response. If possible, the unique_id should be saved by the
    /// client locally and used for subsequent RegisterClient API calls. Otherwise, a new unique_id will be
    /// generated for further API calls.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Vendor specific data
    ///
    /// _(optional)_ Array of Tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterClientReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterClientReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (TokenServerUri != other.TokenServerUri) return false;
      if (UniqueIdType != other.UniqueIdType) return false;
      if (UniqueId != other.UniqueId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) hash ^= Status.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (TokenServerUri.Length != 0) hash ^= TokenServerUri.GetHashCode();
      if (UniqueIdType.Length != 0) hash ^= UniqueIdType.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionCookie);
      }
      if (TokenServerUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenServerUri);
      }
      if (UniqueIdType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UniqueId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionCookie);
      }
      if (TokenServerUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenServerUri);
      }
      if (UniqueIdType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UniqueId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (TokenServerUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenServerUri);
      }
      if (UniqueIdType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueIdType);
      }
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterClientReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        Status = other.Status;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.TokenServerUri.Length != 0) {
        TokenServerUri = other.TokenServerUri;
      }
      if (other.UniqueIdType.Length != 0) {
        UniqueIdType = other.UniqueIdType;
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SessionCookie = input.ReadString();
            break;
          }
          case 34: {
            TokenServerUri = input.ReadString();
            break;
          }
          case 42: {
            UniqueIdType = input.ReadString();
            break;
          }
          case 50: {
            UniqueId = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            SessionCookie = input.ReadString();
            break;
          }
          case 34: {
            TokenServerUri = input.ReadString();
            break;
          }
          case 42: {
            UniqueIdType = input.ReadString();
            break;
          }
          case 50: {
            UniqueId = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FindCloudletRequest : pb::IMessage<FindCloudletRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FindCloudletRequest> _parser = new pb::MessageParser<FindCloudletRequest>(() => new FindCloudletRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest(FindCloudletRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      cellId_ = other.cellId_;
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletRequest Clone() {
      return new FindCloudletRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    ///
    /// Session Cookie
    ///
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    ///
    /// Carrier Name
    ///
    /// _(optional)_ By default, all SDKs will automatically fill in this parameter with the MCC+MNC of your current provider. Only override this parameter if you need to filter for a specific carrier on the DME. The DME will filter for App instances that are associated with the specified carrier.
    /// If you wish to search for any App Instance on the DME regardless of carrier name, you can input “” to consider all carriers as “Any”.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    ///
    /// GPS Location
    ///
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 8;
    private uint cellId_;
    /// <summary>
    ///
    /// Cell ID
    ///
    /// _(optional)_ Cell ID where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 7;
    private global::DistributedMatchEngine.DeviceInfo deviceInfo_;
    /// <summary>
    ///
    /// Device Info
    ///
    /// _(optional)_ Device information for stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    ///
    /// Tags
    ///
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (CellId != other.CellId) return false;
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceInfo);
      }
      if (CellId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceInfo);
      }
      if (CellId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 58: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 64: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 58: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 64: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlatformFindCloudletRequest : pb::IMessage<PlatformFindCloudletRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlatformFindCloudletRequest> _parser = new pb::MessageParser<PlatformFindCloudletRequest>(() => new PlatformFindCloudletRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlatformFindCloudletRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformFindCloudletRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformFindCloudletRequest(PlatformFindCloudletRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      clientToken_ = other.clientToken_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlatformFindCloudletRequest Clone() {
      return new PlatformFindCloudletRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    ///
    /// Session Cookie
    ///
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    ///
    /// Carrier Name
    ///
    /// _(optional)_ By default, all SDKs will automatically fill in this parameter with the MCC+MNC of your current provider. Only override this parameter if you need to filter for a specific carrier on the DME. The DME will filter for App instances that are associated with the specified carrier.
    /// If you wish to search for any app instance on the DME regardless of carrier name, you can input “” to consider all carriers as “Any”.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_token" field.</summary>
    public const int ClientTokenFieldNumber = 4;
    private string clientToken_ = "";
    /// <summary>
    ///
    /// Client Token
    ///
    /// Token with encoded client data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientToken {
      get { return clientToken_; }
      set {
        clientToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    ///
    /// Tags
    ///
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlatformFindCloudletRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlatformFindCloudletRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (ClientToken != other.ClientToken) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (ClientToken.Length != 0) hash ^= ClientToken.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (ClientToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientToken);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (ClientToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientToken);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (ClientToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientToken);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlatformFindCloudletRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.ClientToken.Length != 0) {
        ClientToken = other.ClientToken;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            ClientToken = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            ClientToken = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FindCloudletReply : pb::IMessage<FindCloudletReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FindCloudletReply> _parser = new pb::MessageParser<FindCloudletReply>(() => new FindCloudletReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindCloudletReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply(FindCloudletReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      fqdn_ = other.fqdn_;
      ports_ = other.ports_.Clone();
      cloudletLocation_ = other.cloudletLocation_ != null ? other.cloudletLocation_.Clone() : null;
      edgeEventsCookie_ = other.edgeEventsCookie_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindCloudletReply Clone() {
      return new FindCloudletReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus status_ = global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown;
    /// <summary>
    /// Status return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 3;
    private string fqdn_ = "";
    /// <summary>
    /// Fully Qualified Domain Name of the Closest App instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(34, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// List of Service Endpoints for AppInst
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "cloudlet_location" field.</summary>
    public const int CloudletLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc cloudletLocation_;
    /// <summary>
    /// Location of the cloudlet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc CloudletLocation {
      get { return cloudletLocation_; }
      set {
        cloudletLocation_ = value;
      }
    }

    /// <summary>Field number for the "edge_events_cookie" field.</summary>
    public const int EdgeEventsCookieFieldNumber = 6;
    private string edgeEventsCookie_ = "";
    /// <summary>
    /// Session Cookie for specific EdgeEvents for specific AppInst
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EdgeEventsCookie {
      get { return edgeEventsCookie_; }
      set {
        edgeEventsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindCloudletReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindCloudletReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (Fqdn != other.Fqdn) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (!object.Equals(CloudletLocation, other.CloudletLocation)) return false;
      if (EdgeEventsCookie != other.EdgeEventsCookie) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown) hash ^= Status.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (cloudletLocation_ != null) hash ^= CloudletLocation.GetHashCode();
      if (EdgeEventsCookie.Length != 0) hash ^= EdgeEventsCookie.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (cloudletLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CloudletLocation);
      }
      if (EdgeEventsCookie.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EdgeEventsCookie);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(ref output, _repeated_ports_codec);
      if (cloudletLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CloudletLocation);
      }
      if (EdgeEventsCookie.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EdgeEventsCookie);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Fqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (cloudletLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudletLocation);
      }
      if (EdgeEventsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EdgeEventsCookie);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindCloudletReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus.FindUnknown) {
        Status = other.Status;
      }
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      ports_.Add(other.ports_);
      if (other.cloudletLocation_ != null) {
        if (cloudletLocation_ == null) {
          CloudletLocation = new global::DistributedMatchEngine.Loc();
        }
        CloudletLocation.MergeFrom(other.CloudletLocation);
      }
      if (other.EdgeEventsCookie.Length != 0) {
        EdgeEventsCookie = other.EdgeEventsCookie;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) input.ReadEnum();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 42: {
            if (cloudletLocation_ == null) {
              CloudletLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(CloudletLocation);
            break;
          }
          case 50: {
            EdgeEventsCookie = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.FindCloudletReply.Types.FindStatus) input.ReadEnum();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(ref input, _repeated_ports_codec);
            break;
          }
          case 42: {
            if (cloudletLocation_ == null) {
              CloudletLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(CloudletLocation);
            break;
          }
          case 50: {
            EdgeEventsCookie = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FindCloudletReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum FindStatus {
        [pbr::OriginalName("FIND_UNKNOWN")] FindUnknown = 0,
        [pbr::OriginalName("FIND_FOUND")] FindFound = 1,
        [pbr::OriginalName("FIND_NOTFOUND")] FindNotfound = 2,
      }

    }
    #endregion

  }

  public sealed partial class VerifyLocationRequest : pb::IMessage<VerifyLocationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerifyLocationRequest> _parser = new pb::MessageParser<VerifyLocationRequest>(() => new VerifyLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest(VerifyLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      verifyLocToken_ = other.verifyLocToken_;
      cellId_ = other.cellId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationRequest Clone() {
      return new VerifyLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    ///
    /// Session Cookie
    ///
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    ///
    /// Carrier Name
    ///
    /// Unique carrier identification (typically MCC + MNC)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    ///
    /// GPS Location
    ///
    /// The GPS location to verify
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "verify_loc_token" field.</summary>
    public const int VerifyLocTokenFieldNumber = 5;
    private string verifyLocToken_ = "";
    /// <summary>
    ///
    /// Verify Location Token
    ///
    /// Must be retrieved from TokenServerURI
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyLocToken {
      get { return verifyLocToken_; }
      set {
        verifyLocToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 6;
    private uint cellId_;
    /// <summary>
    ///
    /// Cell ID
    ///
    /// _(optional)_ Cell ID where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    ///
    /// Tags
    ///
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (VerifyLocToken != other.VerifyLocToken) return false;
      if (CellId != other.CellId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (VerifyLocToken.Length != 0) hash ^= VerifyLocToken.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VerifyLocToken);
      }
      if (CellId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VerifyLocToken);
      }
      if (CellId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (VerifyLocToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyLocToken);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.VerifyLocToken.Length != 0) {
        VerifyLocToken = other.VerifyLocToken;
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 42: {
            VerifyLocToken = input.ReadString();
            break;
          }
          case 48: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 42: {
            VerifyLocToken = input.ReadString();
            break;
          }
          case 48: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VerifyLocationReply : pb::IMessage<VerifyLocationReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VerifyLocationReply> _parser = new pb::MessageParser<VerifyLocationReply>(() => new VerifyLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply(VerifyLocationReply other) : this() {
      ver_ = other.ver_;
      towerStatus_ = other.towerStatus_;
      gpsLocationStatus_ = other.gpsLocationStatus_;
      gpsLocationAccuracyKm_ = other.gpsLocationAccuracyKm_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyLocationReply Clone() {
      return new VerifyLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "tower_status" field.</summary>
    public const int TowerStatusFieldNumber = 2;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus towerStatus_ = global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus TowerStatus {
      get { return towerStatus_; }
      set {
        towerStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_status" field.</summary>
    public const int GpsLocationStatusFieldNumber = 3;
    private global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus gpsLocationStatus_ = global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus GpsLocationStatus {
      get { return gpsLocationStatus_; }
      set {
        gpsLocationStatus_ = value;
      }
    }

    /// <summary>Field number for the "gps_location_accuracy_km" field.</summary>
    public const int GpsLocationAccuracyKmFieldNumber = 4;
    private double gpsLocationAccuracyKm_;
    /// <summary>
    /// location accuracy, the location is verified to
    /// be within this number of kilometers.  Negative value
    /// means no verification was performed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double GpsLocationAccuracyKm {
      get { return gpsLocationAccuracyKm_; }
      set {
        gpsLocationAccuracyKm_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (TowerStatus != other.TowerStatus) return false;
      if (GpsLocationStatus != other.GpsLocationStatus) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(GpsLocationAccuracyKm, other.GpsLocationAccuracyKm)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (TowerStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown) hash ^= TowerStatus.GetHashCode();
      if (GpsLocationStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown) hash ^= GpsLocationStatus.GetHashCode();
      if (GpsLocationAccuracyKm != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(GpsLocationAccuracyKm);
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (TowerStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TowerStatus);
      }
      if (GpsLocationStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GpsLocationStatus);
      }
      if (GpsLocationAccuracyKm != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GpsLocationAccuracyKm);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (TowerStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TowerStatus);
      }
      if (GpsLocationStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GpsLocationStatus);
      }
      if (GpsLocationAccuracyKm != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(GpsLocationAccuracyKm);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (TowerStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TowerStatus);
      }
      if (GpsLocationStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GpsLocationStatus);
      }
      if (GpsLocationAccuracyKm != 0D) {
        size += 1 + 8;
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.TowerStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus.TowerUnknown) {
        TowerStatus = other.TowerStatus;
      }
      if (other.GpsLocationStatus != global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus.LocUnknown) {
        GpsLocationStatus = other.GpsLocationStatus;
      }
      if (other.GpsLocationAccuracyKm != 0D) {
        GpsLocationAccuracyKm = other.GpsLocationAccuracyKm;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            TowerStatus = (global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus) input.ReadEnum();
            break;
          }
          case 24: {
            GpsLocationStatus = (global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus) input.ReadEnum();
            break;
          }
          case 33: {
            GpsLocationAccuracyKm = input.ReadDouble();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            TowerStatus = (global::DistributedMatchEngine.VerifyLocationReply.Types.TowerStatus) input.ReadEnum();
            break;
          }
          case 24: {
            GpsLocationStatus = (global::DistributedMatchEngine.VerifyLocationReply.Types.GPSLocationStatus) input.ReadEnum();
            break;
          }
          case 33: {
            GpsLocationAccuracyKm = input.ReadDouble();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VerifyLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum TowerStatus {
        [pbr::OriginalName("TOWER_UNKNOWN")] TowerUnknown = 0,
        [pbr::OriginalName("CONNECTED_TO_SPECIFIED_TOWER")] ConnectedToSpecifiedTower = 1,
        [pbr::OriginalName("NOT_CONNECTED_TO_SPECIFIED_TOWER")] NotConnectedToSpecifiedTower = 2,
      }

      public enum GPSLocationStatus {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_VERIFIED")] LocVerified = 1,
        [pbr::OriginalName("LOC_MISMATCH_SAME_COUNTRY")] LocMismatchSameCountry = 2,
        [pbr::OriginalName("LOC_MISMATCH_OTHER_COUNTRY")] LocMismatchOtherCountry = 3,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MATCH")] LocRoamingCountryMatch = 4,
        [pbr::OriginalName("LOC_ROAMING_COUNTRY_MISMATCH")] LocRoamingCountryMismatch = 5,
        [pbr::OriginalName("LOC_ERROR_UNAUTHORIZED")] LocErrorUnauthorized = 6,
        [pbr::OriginalName("LOC_ERROR_OTHER")] LocErrorOther = 7,
      }

    }
    #endregion

  }

  public sealed partial class GetLocationRequest : pb::IMessage<GetLocationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLocationRequest> _parser = new pb::MessageParser<GetLocationRequest>(() => new GetLocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest(GetLocationRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      cellId_ = other.cellId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationRequest Clone() {
      return new GetLocationRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// Unique carrier identification (typically MCC + MNC)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 4;
    private uint cellId_;
    /// <summary>
    /// _(optional)_ Cell id where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (CellId != other.CellId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (CellId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (CellId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetLocationReply : pb::IMessage<GetLocationReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLocationReply> _parser = new pb::MessageParser<GetLocationReply>(() => new GetLocationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply(GetLocationReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      carrierName_ = other.carrierName_;
      tower_ = other.tower_;
      networkLocation_ = other.networkLocation_ != null ? other.networkLocation_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocationReply Clone() {
      return new GetLocationReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.GetLocationReply.Types.LocStatus status_ = global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.GetLocationReply.Types.LocStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    /// Unique carrier identification (typically MCC + MNC)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tower" field.</summary>
    public const int TowerFieldNumber = 4;
    private ulong tower_;
    /// <summary>
    /// The tower that the user is currently connected to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Tower {
      get { return tower_; }
      set {
        tower_ = value;
      }
    }

    /// <summary>Field number for the "network_location" field.</summary>
    public const int NetworkLocationFieldNumber = 5;
    private global::DistributedMatchEngine.Loc networkLocation_;
    /// <summary>
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc NetworkLocation {
      get { return networkLocation_; }
      set {
        networkLocation_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (CarrierName != other.CarrierName) return false;
      if (Tower != other.Tower) return false;
      if (!object.Equals(NetworkLocation, other.NetworkLocation)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown) hash ^= Status.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (Tower != 0UL) hash ^= Tower.GetHashCode();
      if (networkLocation_ != null) hash ^= NetworkLocation.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Tower);
      }
      if (networkLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NetworkLocation);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (Tower != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Tower);
      }
      if (networkLocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NetworkLocation);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (Tower != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tower);
      }
      if (networkLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkLocation);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocationReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.GetLocationReply.Types.LocStatus.LocUnknown) {
        Status = other.Status;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.Tower != 0UL) {
        Tower = other.Tower;
      }
      if (other.networkLocation_ != null) {
        if (networkLocation_ == null) {
          NetworkLocation = new global::DistributedMatchEngine.Loc();
        }
        NetworkLocation.MergeFrom(other.NetworkLocation);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.GetLocationReply.Types.LocStatus) input.ReadEnum();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            Tower = input.ReadUInt64();
            break;
          }
          case 42: {
            if (networkLocation_ == null) {
              NetworkLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(NetworkLocation);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.GetLocationReply.Types.LocStatus) input.ReadEnum();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 32: {
            Tower = input.ReadUInt64();
            break;
          }
          case 42: {
            if (networkLocation_ == null) {
              NetworkLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(NetworkLocation);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetLocationReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum LocStatus {
        [pbr::OriginalName("LOC_UNKNOWN")] LocUnknown = 0,
        [pbr::OriginalName("LOC_FOUND")] LocFound = 1,
        /// <summary>
        /// The user does not allow his location to be tracked
        /// </summary>
        [pbr::OriginalName("LOC_DENIED")] LocDenied = 2,
      }

    }
    #endregion

  }

  public sealed partial class AppInstListRequest : pb::IMessage<AppInstListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppInstListRequest> _parser = new pb::MessageParser<AppInstListRequest>(() => new AppInstListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest(AppInstListRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      carrierName_ = other.carrierName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      cellId_ = other.cellId_;
      limit_ = other.limit_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListRequest Clone() {
      return new AppInstListRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 3;
    private string carrierName_ = "";
    /// <summary>
    ///
    /// Carrier Name
    ///
    /// _(optional)_ By default, all SDKs will automatically fill in this parameter with the MCC+MNC of your current provider. Only override this parameter if you need to filter for a specific carrier on the DME. The DME will filter for App instances that are associated with the specified carrier.
    /// If you wish to search for any App Instance on the DME regardless of carrier name, you can input “” to consider all carriers as “Any”.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 5;
    private uint cellId_;
    /// <summary>
    /// _(optional)_ Cell id where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private uint limit_;
    /// <summary>
    /// _(optional)_ Limit the number of results, defaults to 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (CellId != other.CellId) return false;
      if (Limit != other.Limit) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (CellId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CellId);
      }
      if (Limit != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Limit);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      if (CellId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(CellId);
      }
      if (Limit != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Limit);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 40: {
            CellId = input.ReadUInt32();
            break;
          }
          case 48: {
            Limit = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            CarrierName = input.ReadString();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 40: {
            CellId = input.ReadUInt32();
            break;
          }
          case 48: {
            Limit = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Appinstance : pb::IMessage<Appinstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Appinstance> _parser = new pb::MessageParser<Appinstance>(() => new Appinstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Appinstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance(Appinstance other) : this() {
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      fqdn_ = other.fqdn_;
      ports_ = other.ports_.Clone();
      orgName_ = other.orgName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Appinstance Clone() {
      return new Appinstance(this);
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 1;
    private string appName_ = "";
    /// <summary>
    /// App Instance Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 2;
    private string appVers_ = "";
    /// <summary>
    /// App Instance Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 3;
    private string fqdn_ = "";
    /// <summary>
    /// App Instance FQDN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(34, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// ports to access app
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "org_name" field.</summary>
    public const int OrgNameFieldNumber = 5;
    private string orgName_ = "";
    /// <summary>
    /// App Organization Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrgName {
      get { return orgName_; }
      set {
        orgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Appinstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Appinstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (Fqdn != other.Fqdn) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (OrgName != other.OrgName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      hash ^= ports_.GetHashCode();
      if (OrgName.Length != 0) hash ^= OrgName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      if (OrgName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrgName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Fqdn);
      }
      ports_.WriteTo(ref output, _repeated_ports_codec);
      if (OrgName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrgName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (Fqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      if (OrgName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrgName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Appinstance other) {
      if (other == null) {
        return;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      ports_.Add(other.ports_);
      if (other.OrgName.Length != 0) {
        OrgName = other.OrgName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 42: {
            OrgName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            Fqdn = input.ReadString();
            break;
          }
          case 34: {
            ports_.AddEntriesFrom(ref input, _repeated_ports_codec);
            break;
          }
          case 42: {
            OrgName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CloudletLocation : pb::IMessage<CloudletLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudletLocation> _parser = new pb::MessageParser<CloudletLocation>(() => new CloudletLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudletLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation(CloudletLocation other) : this() {
      carrierName_ = other.carrierName_;
      cloudletName_ = other.cloudletName_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      distance_ = other.distance_;
      appinstances_ = other.appinstances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudletLocation Clone() {
      return new CloudletLocation(this);
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 1;
    private string carrierName_ = "";
    /// <summary>
    /// Cloudlet Organization Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloudlet_name" field.</summary>
    public const int CloudletNameFieldNumber = 2;
    private string cloudletName_ = "";
    /// <summary>
    /// Cloudlet Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CloudletName {
      get { return cloudletName_; }
      set {
        cloudletName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 3;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS Location of the cloudlet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private double distance_;
    /// <summary>
    /// Distance of cloudlet vs loc in request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "appinstances" field.</summary>
    public const int AppinstancesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.Appinstance> _repeated_appinstances_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.Appinstance.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> appinstances_ = new pbc::RepeatedField<global::DistributedMatchEngine.Appinstance>();
    /// <summary>
    /// App instances
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.Appinstance> Appinstances {
      get { return appinstances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudletLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudletLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarrierName != other.CarrierName) return false;
      if (CloudletName != other.CloudletName) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Distance, other.Distance)) return false;
      if(!appinstances_.Equals(other.appinstances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (CloudletName.Length != 0) hash ^= CloudletName.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (Distance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Distance);
      hash ^= appinstances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CarrierName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierName);
      }
      if (CloudletName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CloudletName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      if (Distance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Distance);
      }
      appinstances_.WriteTo(output, _repeated_appinstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CarrierName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierName);
      }
      if (CloudletName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CloudletName);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      if (Distance != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Distance);
      }
      appinstances_.WriteTo(ref output, _repeated_appinstances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (CloudletName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CloudletName);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (Distance != 0D) {
        size += 1 + 8;
      }
      size += appinstances_.CalculateSize(_repeated_appinstances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudletLocation other) {
      if (other == null) {
        return;
      }
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.CloudletName.Length != 0) {
        CloudletName = other.CloudletName;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.Distance != 0D) {
        Distance = other.Distance;
      }
      appinstances_.Add(other.appinstances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CarrierName = input.ReadString();
            break;
          }
          case 18: {
            CloudletName = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 33: {
            Distance = input.ReadDouble();
            break;
          }
          case 42: {
            appinstances_.AddEntriesFrom(input, _repeated_appinstances_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CarrierName = input.ReadString();
            break;
          }
          case 18: {
            CloudletName = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 33: {
            Distance = input.ReadDouble();
            break;
          }
          case 42: {
            appinstances_.AddEntriesFrom(ref input, _repeated_appinstances_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppInstListReply : pb::IMessage<AppInstListReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppInstListReply> _parser = new pb::MessageParser<AppInstListReply>(() => new AppInstListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppInstListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply(AppInstListReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      cloudlets_ = other.cloudlets_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppInstListReply Clone() {
      return new AppInstListReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.AppInstListReply.Types.AIStatus status_ = global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.AppInstListReply.Types.AIStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "cloudlets" field.</summary>
    public const int CloudletsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.CloudletLocation> _repeated_cloudlets_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.CloudletLocation.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> cloudlets_ = new pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.CloudletLocation> Cloudlets {
      get { return cloudlets_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppInstListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppInstListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!cloudlets_.Equals(other.cloudlets_)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined) hash ^= Status.GetHashCode();
      hash ^= cloudlets_.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      cloudlets_.WriteTo(output, _repeated_cloudlets_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      cloudlets_.WriteTo(ref output, _repeated_cloudlets_codec);
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += cloudlets_.CalculateSize(_repeated_cloudlets_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppInstListReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.AppInstListReply.Types.AIStatus.AiUndefined) {
        Status = other.Status;
      }
      cloudlets_.Add(other.cloudlets_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.AppInstListReply.Types.AIStatus) input.ReadEnum();
            break;
          }
          case 26: {
            cloudlets_.AddEntriesFrom(input, _repeated_cloudlets_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.AppInstListReply.Types.AIStatus) input.ReadEnum();
            break;
          }
          case 26: {
            cloudlets_.AddEntriesFrom(ref input, _repeated_cloudlets_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppInstListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum AIStatus {
        [pbr::OriginalName("AI_UNDEFINED")] AiUndefined = 0,
        [pbr::OriginalName("AI_SUCCESS")] AiSuccess = 1,
        [pbr::OriginalName("AI_FAIL")] AiFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class FqdnListRequest : pb::IMessage<FqdnListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FqdnListRequest> _parser = new pb::MessageParser<FqdnListRequest>(() => new FqdnListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FqdnListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest(FqdnListRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      cellId_ = other.cellId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListRequest Clone() {
      return new FqdnListRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 3;
    private uint cellId_;
    /// <summary>
    /// _(optional)_ Cell id where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FqdnListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FqdnListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (CellId != other.CellId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CellId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (CellId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FqdnListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppFqdn : pb::IMessage<AppFqdn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppFqdn> _parser = new pb::MessageParser<AppFqdn>(() => new AppFqdn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppFqdn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn(AppFqdn other) : this() {
      appName_ = other.appName_;
      appVers_ = other.appVers_;
      orgName_ = other.orgName_;
      fqdns_ = other.fqdns_.Clone();
      androidPackageName_ = other.androidPackageName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppFqdn Clone() {
      return new AppFqdn(this);
    }

    /// <summary>Field number for the "app_name" field.</summary>
    public const int AppNameFieldNumber = 1;
    private string appName_ = "";
    /// <summary>
    /// App  Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppName {
      get { return appName_; }
      set {
        appName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_vers" field.</summary>
    public const int AppVersFieldNumber = 2;
    private string appVers_ = "";
    /// <summary>
    /// App Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppVers {
      get { return appVers_; }
      set {
        appVers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "org_name" field.</summary>
    public const int OrgNameFieldNumber = 3;
    private string orgName_ = "";
    /// <summary>
    /// App organization name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrgName {
      get { return orgName_; }
      set {
        orgName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fqdns" field.</summary>
    public const int FqdnsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_fqdns_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> fqdns_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// App FQDN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Fqdns {
      get { return fqdns_; }
    }

    /// <summary>Field number for the "android_package_name" field.</summary>
    public const int AndroidPackageNameFieldNumber = 5;
    private string androidPackageName_ = "";
    /// <summary>
    /// _(optional)_ Android package name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AndroidPackageName {
      get { return androidPackageName_; }
      set {
        androidPackageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppFqdn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppFqdn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppName != other.AppName) return false;
      if (AppVers != other.AppVers) return false;
      if (OrgName != other.OrgName) return false;
      if(!fqdns_.Equals(other.fqdns_)) return false;
      if (AndroidPackageName != other.AndroidPackageName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppName.Length != 0) hash ^= AppName.GetHashCode();
      if (AppVers.Length != 0) hash ^= AppVers.GetHashCode();
      if (OrgName.Length != 0) hash ^= OrgName.GetHashCode();
      hash ^= fqdns_.GetHashCode();
      if (AndroidPackageName.Length != 0) hash ^= AndroidPackageName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (OrgName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrgName);
      }
      fqdns_.WriteTo(output, _repeated_fqdns_codec);
      if (AndroidPackageName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AndroidPackageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AppName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AppName);
      }
      if (AppVers.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppVers);
      }
      if (OrgName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrgName);
      }
      fqdns_.WriteTo(ref output, _repeated_fqdns_codec);
      if (AndroidPackageName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AndroidPackageName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppName);
      }
      if (AppVers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppVers);
      }
      if (OrgName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrgName);
      }
      size += fqdns_.CalculateSize(_repeated_fqdns_codec);
      if (AndroidPackageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AndroidPackageName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppFqdn other) {
      if (other == null) {
        return;
      }
      if (other.AppName.Length != 0) {
        AppName = other.AppName;
      }
      if (other.AppVers.Length != 0) {
        AppVers = other.AppVers;
      }
      if (other.OrgName.Length != 0) {
        OrgName = other.OrgName;
      }
      fqdns_.Add(other.fqdns_);
      if (other.AndroidPackageName.Length != 0) {
        AndroidPackageName = other.AndroidPackageName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            OrgName = input.ReadString();
            break;
          }
          case 34: {
            fqdns_.AddEntriesFrom(input, _repeated_fqdns_codec);
            break;
          }
          case 42: {
            AndroidPackageName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AppName = input.ReadString();
            break;
          }
          case 18: {
            AppVers = input.ReadString();
            break;
          }
          case 26: {
            OrgName = input.ReadString();
            break;
          }
          case 34: {
            fqdns_.AddEntriesFrom(ref input, _repeated_fqdns_codec);
            break;
          }
          case 42: {
            AndroidPackageName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FqdnListReply : pb::IMessage<FqdnListReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FqdnListReply> _parser = new pb::MessageParser<FqdnListReply>(() => new FqdnListReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FqdnListReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply(FqdnListReply other) : this() {
      ver_ = other.ver_;
      appFqdns_ = other.appFqdns_.Clone();
      status_ = other.status_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FqdnListReply Clone() {
      return new FqdnListReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "app_fqdns" field.</summary>
    public const int AppFqdnsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppFqdn> _repeated_appFqdns_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.AppFqdn.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn> appFqdns_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppFqdn> AppFqdns {
      get { return appFqdns_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::DistributedMatchEngine.FqdnListReply.Types.FLStatus status_ = global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FqdnListReply.Types.FLStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FqdnListReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FqdnListReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if(!appFqdns_.Equals(other.appFqdns_)) return false;
      if (Status != other.Status) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      hash ^= appFqdns_.GetHashCode();
      if (Status != global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined) hash ^= Status.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      appFqdns_.WriteTo(output, _repeated_appFqdns_codec);
      if (Status != global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      appFqdns_.WriteTo(ref output, _repeated_appFqdns_codec);
      if (Status != global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      size += appFqdns_.CalculateSize(_repeated_appFqdns_codec);
      if (Status != global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FqdnListReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      appFqdns_.Add(other.appFqdns_);
      if (other.Status != global::DistributedMatchEngine.FqdnListReply.Types.FLStatus.FlUndefined) {
        Status = other.Status;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 26: {
            appFqdns_.AddEntriesFrom(input, _repeated_appFqdns_codec);
            break;
          }
          case 32: {
            Status = (global::DistributedMatchEngine.FqdnListReply.Types.FLStatus) input.ReadEnum();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 26: {
            appFqdns_.AddEntriesFrom(ref input, _repeated_appFqdns_codec);
            break;
          }
          case 32: {
            Status = (global::DistributedMatchEngine.FqdnListReply.Types.FLStatus) input.ReadEnum();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FqdnListReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status of the reply
      /// </summary>
      public enum FLStatus {
        [pbr::OriginalName("FL_UNDEFINED")] FlUndefined = 0,
        [pbr::OriginalName("FL_SUCCESS")] FlSuccess = 1,
        [pbr::OriginalName("FL_FAIL")] FlFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class AppOfficialFqdnRequest : pb::IMessage<AppOfficialFqdnRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppOfficialFqdnRequest> _parser = new pb::MessageParser<AppOfficialFqdnRequest>(() => new AppOfficialFqdnRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppOfficialFqdnRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnRequest(AppOfficialFqdnRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnRequest Clone() {
      return new AppOfficialFqdnRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 3;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// The GPS location of the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppOfficialFqdnRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppOfficialFqdnRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GpsLocation);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppOfficialFqdnRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppOfficialFqdnReply : pb::IMessage<AppOfficialFqdnReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppOfficialFqdnReply> _parser = new pb::MessageParser<AppOfficialFqdnReply>(() => new AppOfficialFqdnReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppOfficialFqdnReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnReply(AppOfficialFqdnReply other) : this() {
      ver_ = other.ver_;
      appOfficialFqdn_ = other.appOfficialFqdn_;
      clientToken_ = other.clientToken_;
      status_ = other.status_;
      ports_ = other.ports_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppOfficialFqdnReply Clone() {
      return new AppOfficialFqdnReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "app_official_fqdn" field.</summary>
    public const int AppOfficialFqdnFieldNumber = 2;
    private string appOfficialFqdn_ = "";
    /// <summary>
    /// The FQDN to which the app is reached independent of the edge
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppOfficialFqdn {
      get { return appOfficialFqdn_; }
      set {
        appOfficialFqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_token" field.</summary>
    public const int ClientTokenFieldNumber = 3;
    private string clientToken_ = "";
    /// <summary>
    /// Tokenized client data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientToken {
      get { return clientToken_; }
      set {
        clientToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus status_ = global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ports" field.</summary>
    public const int PortsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.AppPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.AppPort.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.AppPort> ports_ = new pbc::RepeatedField<global::DistributedMatchEngine.AppPort>();
    /// <summary>
    /// List of Service Endpoints for AppInst
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.AppPort> Ports {
      get { return ports_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppOfficialFqdnReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppOfficialFqdnReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (AppOfficialFqdn != other.AppOfficialFqdn) return false;
      if (ClientToken != other.ClientToken) return false;
      if (Status != other.Status) return false;
      if(!ports_.Equals(other.ports_)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (AppOfficialFqdn.Length != 0) hash ^= AppOfficialFqdn.GetHashCode();
      if (ClientToken.Length != 0) hash ^= ClientToken.GetHashCode();
      if (Status != global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined) hash ^= Status.GetHashCode();
      hash ^= ports_.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (AppOfficialFqdn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppOfficialFqdn);
      }
      if (ClientToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientToken);
      }
      if (Status != global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (AppOfficialFqdn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppOfficialFqdn);
      }
      if (ClientToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientToken);
      }
      if (Status != global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      ports_.WriteTo(ref output, _repeated_ports_codec);
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (AppOfficialFqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppOfficialFqdn);
      }
      if (ClientToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientToken);
      }
      if (Status != global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppOfficialFqdnReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.AppOfficialFqdn.Length != 0) {
        AppOfficialFqdn = other.AppOfficialFqdn;
      }
      if (other.ClientToken.Length != 0) {
        ClientToken = other.ClientToken;
      }
      if (other.Status != global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus.AofUndefined) {
        Status = other.Status;
      }
      ports_.Add(other.ports_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            AppOfficialFqdn = input.ReadString();
            break;
          }
          case 26: {
            ClientToken = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus) input.ReadEnum();
            break;
          }
          case 42: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            AppOfficialFqdn = input.ReadString();
            break;
          }
          case 26: {
            ClientToken = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::DistributedMatchEngine.AppOfficialFqdnReply.Types.AOFStatus) input.ReadEnum();
            break;
          }
          case 42: {
            ports_.AddEntriesFrom(ref input, _repeated_ports_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppOfficialFqdnReply message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum AOFStatus {
        [pbr::OriginalName("AOF_UNDEFINED")] AofUndefined = 0,
        [pbr::OriginalName("AOF_SUCCESS")] AofSuccess = 1,
        [pbr::OriginalName("AOF_FAIL")] AofFail = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupRequest : pb::IMessage<DynamicLocGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DynamicLocGroupRequest> _parser = new pb::MessageParser<DynamicLocGroupRequest>(() => new DynamicLocGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest(DynamicLocGroupRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      lgId_ = other.lgId_;
      commType_ = other.commType_;
      userData_ = other.userData_;
      cellId_ = other.cellId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupRequest Clone() {
      return new DynamicLocGroupRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lg_id" field.</summary>
    public const int LgIdFieldNumber = 3;
    private ulong lgId_;
    /// <summary>
    /// Dynamic Location Group Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LgId {
      get { return lgId_; }
      set {
        lgId_ = value;
      }
    }

    /// <summary>Field number for the "comm_type" field.</summary>
    public const int CommTypeFieldNumber = 11;
    private global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType commType_ = global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType CommType {
      get { return commType_; }
      set {
        commType_ = value;
      }
    }

    /// <summary>Field number for the "user_data" field.</summary>
    public const int UserDataFieldNumber = 12;
    private string userData_ = "";
    /// <summary>
    /// Unused
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserData {
      get { return userData_; }
      set {
        userData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 13;
    private uint cellId_;
    /// <summary>
    /// _(optional)_ Cell id where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (LgId != other.LgId) return false;
      if (CommType != other.CommType) return false;
      if (UserData != other.UserData) return false;
      if (CellId != other.CellId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (LgId != 0UL) hash ^= LgId.GetHashCode();
      if (CommType != global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined) hash ^= CommType.GetHashCode();
      if (UserData.Length != 0) hash ^= UserData.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (LgId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LgId);
      }
      if (CommType != global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CommType);
      }
      if (UserData.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserData);
      }
      if (CellId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      if (LgId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LgId);
      }
      if (CommType != global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CommType);
      }
      if (UserData.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserData);
      }
      if (CellId != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (LgId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LgId);
      }
      if (CommType != global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommType);
      }
      if (UserData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserData);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.LgId != 0UL) {
        LgId = other.LgId;
      }
      if (other.CommType != global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType.DlgUndefined) {
        CommType = other.CommType;
      }
      if (other.UserData.Length != 0) {
        UserData = other.UserData;
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            LgId = input.ReadUInt64();
            break;
          }
          case 88: {
            CommType = (global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) input.ReadEnum();
            break;
          }
          case 98: {
            UserData = input.ReadString();
            break;
          }
          case 104: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 24: {
            LgId = input.ReadUInt64();
            break;
          }
          case 88: {
            CommType = (global::DistributedMatchEngine.DynamicLocGroupRequest.Types.DlgCommType) input.ReadEnum();
            break;
          }
          case 98: {
            UserData = input.ReadString();
            break;
          }
          case 104: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DynamicLocGroupRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Use Secure communication or Open with the group
      /// </summary>
      public enum DlgCommType {
        [pbr::OriginalName("DLG_UNDEFINED")] DlgUndefined = 0,
        [pbr::OriginalName("DLG_SECURE")] DlgSecure = 1,
        [pbr::OriginalName("DLG_OPEN")] DlgOpen = 2,
      }

    }
    #endregion

  }

  public sealed partial class DynamicLocGroupReply : pb::IMessage<DynamicLocGroupReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DynamicLocGroupReply> _parser = new pb::MessageParser<DynamicLocGroupReply>(() => new DynamicLocGroupReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicLocGroupReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply(DynamicLocGroupReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      errorCode_ = other.errorCode_;
      groupCookie_ = other.groupCookie_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicLocGroupReply Clone() {
      return new DynamicLocGroupReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = global::DistributedMatchEngine.ReplyStatus.RsUndefined;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private uint errorCode_;
    /// <summary>
    /// Error Code based on Failure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "group_cookie" field.</summary>
    public const int GroupCookieFieldNumber = 5;
    private string groupCookie_ = "";
    /// <summary>
    /// Group Cookie for Secure Group Communication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupCookie {
      get { return groupCookie_; }
      set {
        groupCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicLocGroupReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicLocGroupReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (GroupCookie != other.GroupCookie) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) hash ^= Status.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (GroupCookie.Length != 0) hash ^= GroupCookie.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupCookie);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupCookie);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorCode);
      }
      if (GroupCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupCookie);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicLocGroupReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        Status = other.Status;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.GroupCookie.Length != 0) {
        GroupCookie = other.GroupCookie;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 42: {
            GroupCookie = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 24: {
            ErrorCode = input.ReadUInt32();
            break;
          }
          case 42: {
            GroupCookie = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QosPosition : pb::IMessage<QosPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QosPosition> _parser = new pb::MessageParser<QosPosition>(() => new QosPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition(QosPosition other) : this() {
      positionid_ = other.positionid_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPosition Clone() {
      return new QosPosition(this);
    }

    /// <summary>Field number for the "positionid" field.</summary>
    public const int PositionidFieldNumber = 1;
    private long positionid_;
    /// <summary>
    /// as set by the client, must be unique within QosRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Positionid {
      get { return positionid_; }
      set {
        positionid_ = value;
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 2;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    ///location
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Positionid != other.Positionid) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Positionid != 0L) hash ^= Positionid.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Positionid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Positionid);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPosition other) {
      if (other == null) {
        return;
      }
      if (other.Positionid != 0L) {
        Positionid = other.Positionid;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// supported band values
  /// </summary>
  public sealed partial class BandSelection : pb::IMessage<BandSelection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BandSelection> _parser = new pb::MessageParser<BandSelection>(() => new BandSelection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BandSelection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BandSelection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BandSelection(BandSelection other) : this() {
      rat2G_ = other.rat2G_.Clone();
      rat3G_ = other.rat3G_.Clone();
      rat4G_ = other.rat4G_.Clone();
      rat5G_ = other.rat5G_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BandSelection Clone() {
      return new BandSelection(this);
    }

    /// <summary>Field number for the "rat_2g" field.</summary>
    public const int Rat2GFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_rat2G_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> rat2G_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Radio Access Technologies
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Rat2G {
      get { return rat2G_; }
    }

    /// <summary>Field number for the "rat_3g" field.</summary>
    public const int Rat3GFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_rat3G_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> rat3G_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Rat3G {
      get { return rat3G_; }
    }

    /// <summary>Field number for the "rat_4g" field.</summary>
    public const int Rat4GFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_rat4G_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> rat4G_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Rat4G {
      get { return rat4G_; }
    }

    /// <summary>Field number for the "rat_5g" field.</summary>
    public const int Rat5GFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_rat5G_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> rat5G_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Rat5G {
      get { return rat5G_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BandSelection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BandSelection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rat2G_.Equals(other.rat2G_)) return false;
      if(!rat3G_.Equals(other.rat3G_)) return false;
      if(!rat4G_.Equals(other.rat4G_)) return false;
      if(!rat5G_.Equals(other.rat5G_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rat2G_.GetHashCode();
      hash ^= rat3G_.GetHashCode();
      hash ^= rat4G_.GetHashCode();
      hash ^= rat5G_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rat2G_.WriteTo(output, _repeated_rat2G_codec);
      rat3G_.WriteTo(output, _repeated_rat3G_codec);
      rat4G_.WriteTo(output, _repeated_rat4G_codec);
      rat5G_.WriteTo(output, _repeated_rat5G_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rat2G_.WriteTo(ref output, _repeated_rat2G_codec);
      rat3G_.WriteTo(ref output, _repeated_rat3G_codec);
      rat4G_.WriteTo(ref output, _repeated_rat4G_codec);
      rat5G_.WriteTo(ref output, _repeated_rat5G_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rat2G_.CalculateSize(_repeated_rat2G_codec);
      size += rat3G_.CalculateSize(_repeated_rat3G_codec);
      size += rat4G_.CalculateSize(_repeated_rat4G_codec);
      size += rat5G_.CalculateSize(_repeated_rat5G_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BandSelection other) {
      if (other == null) {
        return;
      }
      rat2G_.Add(other.rat2G_);
      rat3G_.Add(other.rat3G_);
      rat4G_.Add(other.rat4G_);
      rat5G_.Add(other.rat5G_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rat2G_.AddEntriesFrom(input, _repeated_rat2G_codec);
            break;
          }
          case 18: {
            rat3G_.AddEntriesFrom(input, _repeated_rat3G_codec);
            break;
          }
          case 26: {
            rat4G_.AddEntriesFrom(input, _repeated_rat4G_codec);
            break;
          }
          case 34: {
            rat5G_.AddEntriesFrom(input, _repeated_rat5G_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rat2G_.AddEntriesFrom(ref input, _repeated_rat2G_codec);
            break;
          }
          case 18: {
            rat3G_.AddEntriesFrom(ref input, _repeated_rat3G_codec);
            break;
          }
          case 26: {
            rat4G_.AddEntriesFrom(ref input, _repeated_rat4G_codec);
            break;
          }
          case 34: {
            rat5G_.AddEntriesFrom(ref input, _repeated_rat5G_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// QosPositionRequest is used for both GetQosPositionKpi
  /// </summary>
  public sealed partial class QosPositionRequest : pb::IMessage<QosPositionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QosPositionRequest> _parser = new pb::MessageParser<QosPositionRequest>(() => new QosPositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionRequest(QosPositionRequest other) : this() {
      ver_ = other.ver_;
      sessionCookie_ = other.sessionCookie_;
      positions_ = other.positions_.Clone();
      lteCategory_ = other.lteCategory_;
      bandSelection_ = other.bandSelection_ != null ? other.bandSelection_.Clone() : null;
      cellId_ = other.cellId_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionRequest Clone() {
      return new QosPositionRequest(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 2;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positions" field.</summary>
    public const int PositionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.QosPosition> _repeated_positions_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.QosPosition.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.QosPosition> positions_ = new pbc::RepeatedField<global::DistributedMatchEngine.QosPosition>();
    /// <summary>
    /// list of positions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.QosPosition> Positions {
      get { return positions_; }
    }

    /// <summary>Field number for the "lte_category" field.</summary>
    public const int LteCategoryFieldNumber = 4;
    private int lteCategory_;
    /// <summary>
    /// _(optional)_ Client's device LTE category number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LteCategory {
      get { return lteCategory_; }
      set {
        lteCategory_ = value;
      }
    }

    /// <summary>Field number for the "band_selection" field.</summary>
    public const int BandSelectionFieldNumber = 5;
    private global::DistributedMatchEngine.BandSelection bandSelection_;
    /// <summary>
    /// _(optional)_ Band list used by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.BandSelection BandSelection {
      get { return bandSelection_; }
      set {
        bandSelection_ = value;
      }
    }

    /// <summary>Field number for the "cell_id" field.</summary>
    public const int CellIdFieldNumber = 6;
    private uint cellId_;
    /// <summary>
    /// _(optional)_ Cell id where the client is
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CellId {
      get { return cellId_; }
      set {
        cellId_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if(!positions_.Equals(other.positions_)) return false;
      if (LteCategory != other.LteCategory) return false;
      if (!object.Equals(BandSelection, other.BandSelection)) return false;
      if (CellId != other.CellId) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      hash ^= positions_.GetHashCode();
      if (LteCategory != 0) hash ^= LteCategory.GetHashCode();
      if (bandSelection_ != null) hash ^= BandSelection.GetHashCode();
      if (CellId != 0) hash ^= CellId.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      positions_.WriteTo(output, _repeated_positions_codec);
      if (LteCategory != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LteCategory);
      }
      if (bandSelection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BandSelection);
      }
      if (CellId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionCookie);
      }
      positions_.WriteTo(ref output, _repeated_positions_codec);
      if (LteCategory != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LteCategory);
      }
      if (bandSelection_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BandSelection);
      }
      if (CellId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CellId);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      size += positions_.CalculateSize(_repeated_positions_codec);
      if (LteCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LteCategory);
      }
      if (bandSelection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BandSelection);
      }
      if (CellId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      positions_.Add(other.positions_);
      if (other.LteCategory != 0) {
        LteCategory = other.LteCategory;
      }
      if (other.bandSelection_ != null) {
        if (bandSelection_ == null) {
          BandSelection = new global::DistributedMatchEngine.BandSelection();
        }
        BandSelection.MergeFrom(other.BandSelection);
      }
      if (other.CellId != 0) {
        CellId = other.CellId;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            positions_.AddEntriesFrom(input, _repeated_positions_codec);
            break;
          }
          case 32: {
            LteCategory = input.ReadInt32();
            break;
          }
          case 42: {
            if (bandSelection_ == null) {
              BandSelection = new global::DistributedMatchEngine.BandSelection();
            }
            input.ReadMessage(BandSelection);
            break;
          }
          case 48: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 18: {
            SessionCookie = input.ReadString();
            break;
          }
          case 26: {
            positions_.AddEntriesFrom(ref input, _repeated_positions_codec);
            break;
          }
          case 32: {
            LteCategory = input.ReadInt32();
            break;
          }
          case 42: {
            if (bandSelection_ == null) {
              BandSelection = new global::DistributedMatchEngine.BandSelection();
            }
            input.ReadMessage(BandSelection);
            break;
          }
          case 48: {
            CellId = input.ReadUInt32();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QosPositionKpiResult : pb::IMessage<QosPositionKpiResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QosPositionKpiResult> _parser = new pb::MessageParser<QosPositionKpiResult>(() => new QosPositionKpiResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionKpiResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiResult(QosPositionKpiResult other) : this() {
      positionid_ = other.positionid_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      dluserthroughputMin_ = other.dluserthroughputMin_;
      dluserthroughputAvg_ = other.dluserthroughputAvg_;
      dluserthroughputMax_ = other.dluserthroughputMax_;
      uluserthroughputMin_ = other.uluserthroughputMin_;
      uluserthroughputAvg_ = other.uluserthroughputAvg_;
      uluserthroughputMax_ = other.uluserthroughputMax_;
      latencyMin_ = other.latencyMin_;
      latencyAvg_ = other.latencyAvg_;
      latencyMax_ = other.latencyMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiResult Clone() {
      return new QosPositionKpiResult(this);
    }

    /// <summary>Field number for the "positionid" field.</summary>
    public const int PositionidFieldNumber = 1;
    private long positionid_;
    /// <summary>
    /// as set by the client, must be unique within one QosPositionRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Positionid {
      get { return positionid_; }
      set {
        positionid_ = value;
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 2;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// the location which was requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_min" field.</summary>
    public const int DluserthroughputMinFieldNumber = 3;
    private float dluserthroughputMin_;
    /// <summary>
    /// throughput
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputMin {
      get { return dluserthroughputMin_; }
      set {
        dluserthroughputMin_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_avg" field.</summary>
    public const int DluserthroughputAvgFieldNumber = 4;
    private float dluserthroughputAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputAvg {
      get { return dluserthroughputAvg_; }
      set {
        dluserthroughputAvg_ = value;
      }
    }

    /// <summary>Field number for the "dluserthroughput_max" field.</summary>
    public const int DluserthroughputMaxFieldNumber = 5;
    private float dluserthroughputMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DluserthroughputMax {
      get { return dluserthroughputMax_; }
      set {
        dluserthroughputMax_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_min" field.</summary>
    public const int UluserthroughputMinFieldNumber = 6;
    private float uluserthroughputMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputMin {
      get { return uluserthroughputMin_; }
      set {
        uluserthroughputMin_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_avg" field.</summary>
    public const int UluserthroughputAvgFieldNumber = 7;
    private float uluserthroughputAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputAvg {
      get { return uluserthroughputAvg_; }
      set {
        uluserthroughputAvg_ = value;
      }
    }

    /// <summary>Field number for the "uluserthroughput_max" field.</summary>
    public const int UluserthroughputMaxFieldNumber = 8;
    private float uluserthroughputMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float UluserthroughputMax {
      get { return uluserthroughputMax_; }
      set {
        uluserthroughputMax_ = value;
      }
    }

    /// <summary>Field number for the "latency_min" field.</summary>
    public const int LatencyMinFieldNumber = 9;
    private float latencyMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyMin {
      get { return latencyMin_; }
      set {
        latencyMin_ = value;
      }
    }

    /// <summary>Field number for the "latency_avg" field.</summary>
    public const int LatencyAvgFieldNumber = 10;
    private float latencyAvg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyAvg {
      get { return latencyAvg_; }
      set {
        latencyAvg_ = value;
      }
    }

    /// <summary>Field number for the "latency_max" field.</summary>
    public const int LatencyMaxFieldNumber = 11;
    private float latencyMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float LatencyMax {
      get { return latencyMax_; }
      set {
        latencyMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionKpiResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionKpiResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Positionid != other.Positionid) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputMin, other.DluserthroughputMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputAvg, other.DluserthroughputAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DluserthroughputMax, other.DluserthroughputMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputMin, other.UluserthroughputMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputAvg, other.UluserthroughputAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UluserthroughputMax, other.UluserthroughputMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyMin, other.LatencyMin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyAvg, other.LatencyAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LatencyMax, other.LatencyMax)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Positionid != 0L) hash ^= Positionid.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      if (DluserthroughputMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputMin);
      if (DluserthroughputAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputAvg);
      if (DluserthroughputMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DluserthroughputMax);
      if (UluserthroughputMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputMin);
      if (UluserthroughputAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputAvg);
      if (UluserthroughputMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UluserthroughputMax);
      if (LatencyMin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyMin);
      if (LatencyAvg != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyAvg);
      if (LatencyMax != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LatencyMax);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (DluserthroughputMin != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DluserthroughputMin);
      }
      if (DluserthroughputAvg != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DluserthroughputAvg);
      }
      if (DluserthroughputMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DluserthroughputMax);
      }
      if (UluserthroughputMin != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(UluserthroughputMin);
      }
      if (UluserthroughputAvg != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(UluserthroughputAvg);
      }
      if (UluserthroughputMax != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(UluserthroughputMax);
      }
      if (LatencyMin != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(LatencyMin);
      }
      if (LatencyAvg != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(LatencyAvg);
      }
      if (LatencyMax != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(LatencyMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Positionid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Positionid);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GpsLocation);
      }
      if (DluserthroughputMin != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(DluserthroughputMin);
      }
      if (DluserthroughputAvg != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DluserthroughputAvg);
      }
      if (DluserthroughputMax != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DluserthroughputMax);
      }
      if (UluserthroughputMin != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(UluserthroughputMin);
      }
      if (UluserthroughputAvg != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(UluserthroughputAvg);
      }
      if (UluserthroughputMax != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(UluserthroughputMax);
      }
      if (LatencyMin != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(LatencyMin);
      }
      if (LatencyAvg != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(LatencyAvg);
      }
      if (LatencyMax != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(LatencyMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Positionid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Positionid);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      if (DluserthroughputMin != 0F) {
        size += 1 + 4;
      }
      if (DluserthroughputAvg != 0F) {
        size += 1 + 4;
      }
      if (DluserthroughputMax != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputMin != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputAvg != 0F) {
        size += 1 + 4;
      }
      if (UluserthroughputMax != 0F) {
        size += 1 + 4;
      }
      if (LatencyMin != 0F) {
        size += 1 + 4;
      }
      if (LatencyAvg != 0F) {
        size += 1 + 4;
      }
      if (LatencyMax != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionKpiResult other) {
      if (other == null) {
        return;
      }
      if (other.Positionid != 0L) {
        Positionid = other.Positionid;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      if (other.DluserthroughputMin != 0F) {
        DluserthroughputMin = other.DluserthroughputMin;
      }
      if (other.DluserthroughputAvg != 0F) {
        DluserthroughputAvg = other.DluserthroughputAvg;
      }
      if (other.DluserthroughputMax != 0F) {
        DluserthroughputMax = other.DluserthroughputMax;
      }
      if (other.UluserthroughputMin != 0F) {
        UluserthroughputMin = other.UluserthroughputMin;
      }
      if (other.UluserthroughputAvg != 0F) {
        UluserthroughputAvg = other.UluserthroughputAvg;
      }
      if (other.UluserthroughputMax != 0F) {
        UluserthroughputMax = other.UluserthroughputMax;
      }
      if (other.LatencyMin != 0F) {
        LatencyMin = other.LatencyMin;
      }
      if (other.LatencyAvg != 0F) {
        LatencyAvg = other.LatencyAvg;
      }
      if (other.LatencyMax != 0F) {
        LatencyMax = other.LatencyMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 29: {
            DluserthroughputMin = input.ReadFloat();
            break;
          }
          case 37: {
            DluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 45: {
            DluserthroughputMax = input.ReadFloat();
            break;
          }
          case 53: {
            UluserthroughputMin = input.ReadFloat();
            break;
          }
          case 61: {
            UluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 69: {
            UluserthroughputMax = input.ReadFloat();
            break;
          }
          case 77: {
            LatencyMin = input.ReadFloat();
            break;
          }
          case 85: {
            LatencyAvg = input.ReadFloat();
            break;
          }
          case 93: {
            LatencyMax = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Positionid = input.ReadInt64();
            break;
          }
          case 18: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 29: {
            DluserthroughputMin = input.ReadFloat();
            break;
          }
          case 37: {
            DluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 45: {
            DluserthroughputMax = input.ReadFloat();
            break;
          }
          case 53: {
            UluserthroughputMin = input.ReadFloat();
            break;
          }
          case 61: {
            UluserthroughputAvg = input.ReadFloat();
            break;
          }
          case 69: {
            UluserthroughputMax = input.ReadFloat();
            break;
          }
          case 77: {
            LatencyMin = input.ReadFloat();
            break;
          }
          case 85: {
            LatencyAvg = input.ReadFloat();
            break;
          }
          case 93: {
            LatencyMax = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QosPositionKpiReply : pb::IMessage<QosPositionKpiReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QosPositionKpiReply> _parser = new pb::MessageParser<QosPositionKpiReply>(() => new QosPositionKpiReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QosPositionKpiReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply(QosPositionKpiReply other) : this() {
      ver_ = other.ver_;
      status_ = other.status_;
      positionResults_ = other.positionResults_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QosPositionKpiReply Clone() {
      return new QosPositionKpiReply(this);
    }

    /// <summary>Field number for the "ver" field.</summary>
    public const int VerFieldNumber = 1;
    private uint ver_;
    /// <summary>
    ///
    /// API version
    ///
    /// _(hidden)_ Reserved for future use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ver {
      get { return ver_; }
      set {
        ver_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::DistributedMatchEngine.ReplyStatus status_ = global::DistributedMatchEngine.ReplyStatus.RsUndefined;
    /// <summary>
    /// Status of the reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ReplyStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "position_results" field.</summary>
    public const int PositionResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.QosPositionKpiResult> _repeated_positionResults_codec
        = pb::FieldCodec.ForMessage(26, global::DistributedMatchEngine.QosPositionKpiResult.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.QosPositionKpiResult> positionResults_ = new pbc::RepeatedField<global::DistributedMatchEngine.QosPositionKpiResult>();
    /// <summary>
    /// kpi details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.QosPositionKpiResult> PositionResults {
      get { return positionResults_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QosPositionKpiReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QosPositionKpiReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ver != other.Ver) return false;
      if (Status != other.Status) return false;
      if(!positionResults_.Equals(other.positionResults_)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ver != 0) hash ^= Ver.GetHashCode();
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) hash ^= Status.GetHashCode();
      hash ^= positionResults_.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      positionResults_.WriteTo(output, _repeated_positionResults_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ver != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      positionResults_.WriteTo(ref output, _repeated_positionResults_codec);
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ver);
      }
      if (Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += positionResults_.CalculateSize(_repeated_positionResults_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QosPositionKpiReply other) {
      if (other == null) {
        return;
      }
      if (other.Ver != 0) {
        Ver = other.Ver;
      }
      if (other.Status != global::DistributedMatchEngine.ReplyStatus.RsUndefined) {
        Status = other.Status;
      }
      positionResults_.Add(other.positionResults_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            positionResults_.AddEntriesFrom(input, _repeated_positionResults_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ver = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::DistributedMatchEngine.ReplyStatus) input.ReadEnum();
            break;
          }
          case 26: {
            positionResults_.AddEntriesFrom(ref input, _repeated_positionResults_codec);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Messages from SDK to DME
  /// </summary>
  public sealed partial class ClientEdgeEvent : pb::IMessage<ClientEdgeEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientEdgeEvent> _parser = new pb::MessageParser<ClientEdgeEvent>(() => new ClientEdgeEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientEdgeEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEdgeEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEdgeEvent(ClientEdgeEvent other) : this() {
      sessionCookie_ = other.sessionCookie_;
      edgeEventsCookie_ = other.edgeEventsCookie_;
      eventType_ = other.eventType_;
      gpsLocation_ = other.gpsLocation_ != null ? other.gpsLocation_.Clone() : null;
      samples_ = other.samples_.Clone();
      carrierName_ = other.carrierName_;
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      customEvent_ = other.customEvent_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientEdgeEvent Clone() {
      return new ClientEdgeEvent(this);
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 1;
    private string sessionCookie_ = "";
    /// <summary>
    /// Session Cookie from RegisterClientReply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "edge_events_cookie" field.</summary>
    public const int EdgeEventsCookieFieldNumber = 2;
    private string edgeEventsCookie_ = "";
    /// <summary>
    /// Session Cookie from FindCloudletReply 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EdgeEventsCookie {
      get { return edgeEventsCookie_; }
      set {
        edgeEventsCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 3;
    private global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType eventType_ = global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "gps_location" field.</summary>
    public const int GpsLocationFieldNumber = 4;
    private global::DistributedMatchEngine.Loc gpsLocation_;
    /// <summary>
    /// GPS Location info if event_type is EVENT_LOCATION_UPDATE or EVENT_LATENCY_SAMPLES
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc GpsLocation {
      get { return gpsLocation_; }
      set {
        gpsLocation_ = value;
      }
    }

    /// <summary>Field number for the "samples" field.</summary>
    public const int SamplesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::DistributedMatchEngine.Sample> _repeated_samples_codec
        = pb::FieldCodec.ForMessage(42, global::DistributedMatchEngine.Sample.Parser);
    private readonly pbc::RepeatedField<global::DistributedMatchEngine.Sample> samples_ = new pbc::RepeatedField<global::DistributedMatchEngine.Sample>();
    /// <summary>
    /// Latency Samples if event_type is EVENT_LATENCY_SAMPLES or EVENT_CUSTOM_EVENT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::DistributedMatchEngine.Sample> Samples {
      get { return samples_; }
    }

    /// <summary>Field number for the "carrier_name" field.</summary>
    public const int CarrierNameFieldNumber = 6;
    private string carrierName_ = "";
    /// <summary>
    /// Carrier name for EVENT_LATENCY_SAMPLES or EVENT_LOCATION_UPDATE (can be different from cloudlet org if used "")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierName {
      get { return carrierName_; }
      set {
        carrierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 7;
    private global::DistributedMatchEngine.DeviceInfo deviceInfo_;
    /// <summary>
    /// Device information for stats
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    /// <summary>Field number for the "custom_event" field.</summary>
    public const int CustomEventFieldNumber = 8;
    private string customEvent_ = "";
    /// <summary>
    /// Custom event specified by the application
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomEvent {
      get { return customEvent_; }
      set {
        customEvent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientEdgeEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientEdgeEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionCookie != other.SessionCookie) return false;
      if (EdgeEventsCookie != other.EdgeEventsCookie) return false;
      if (EventType != other.EventType) return false;
      if (!object.Equals(GpsLocation, other.GpsLocation)) return false;
      if(!samples_.Equals(other.samples_)) return false;
      if (CarrierName != other.CarrierName) return false;
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      if (CustomEvent != other.CustomEvent) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (EdgeEventsCookie.Length != 0) hash ^= EdgeEventsCookie.GetHashCode();
      if (EventType != global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown) hash ^= EventType.GetHashCode();
      if (gpsLocation_ != null) hash ^= GpsLocation.GetHashCode();
      hash ^= samples_.GetHashCode();
      if (CarrierName.Length != 0) hash ^= CarrierName.GetHashCode();
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      if (CustomEvent.Length != 0) hash ^= CustomEvent.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionCookie);
      }
      if (EdgeEventsCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EdgeEventsCookie);
      }
      if (EventType != global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventType);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      samples_.WriteTo(output, _repeated_samples_codec);
      if (CarrierName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CarrierName);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceInfo);
      }
      if (CustomEvent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CustomEvent);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionCookie);
      }
      if (EdgeEventsCookie.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EdgeEventsCookie);
      }
      if (EventType != global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EventType);
      }
      if (gpsLocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GpsLocation);
      }
      samples_.WriteTo(ref output, _repeated_samples_codec);
      if (CarrierName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CarrierName);
      }
      if (deviceInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceInfo);
      }
      if (CustomEvent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CustomEvent);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (EdgeEventsCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EdgeEventsCookie);
      }
      if (EventType != global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (gpsLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GpsLocation);
      }
      size += samples_.CalculateSize(_repeated_samples_codec);
      if (CarrierName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierName);
      }
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      if (CustomEvent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomEvent);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientEdgeEvent other) {
      if (other == null) {
        return;
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.EdgeEventsCookie.Length != 0) {
        EdgeEventsCookie = other.EdgeEventsCookie;
      }
      if (other.EventType != global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType.EventUnknown) {
        EventType = other.EventType;
      }
      if (other.gpsLocation_ != null) {
        if (gpsLocation_ == null) {
          GpsLocation = new global::DistributedMatchEngine.Loc();
        }
        GpsLocation.MergeFrom(other.GpsLocation);
      }
      samples_.Add(other.samples_);
      if (other.CarrierName.Length != 0) {
        CarrierName = other.CarrierName;
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      if (other.CustomEvent.Length != 0) {
        CustomEvent = other.CustomEvent;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionCookie = input.ReadString();
            break;
          }
          case 18: {
            EdgeEventsCookie = input.ReadString();
            break;
          }
          case 24: {
            EventType = (global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType) input.ReadEnum();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 42: {
            samples_.AddEntriesFrom(input, _repeated_samples_codec);
            break;
          }
          case 50: {
            CarrierName = input.ReadString();
            break;
          }
          case 58: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 66: {
            CustomEvent = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionCookie = input.ReadString();
            break;
          }
          case 18: {
            EdgeEventsCookie = input.ReadString();
            break;
          }
          case 24: {
            EventType = (global::DistributedMatchEngine.ClientEdgeEvent.Types.ClientEventType) input.ReadEnum();
            break;
          }
          case 34: {
            if (gpsLocation_ == null) {
              GpsLocation = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(GpsLocation);
            break;
          }
          case 42: {
            samples_.AddEntriesFrom(ref input, _repeated_samples_codec);
            break;
          }
          case 50: {
            CarrierName = input.ReadString();
            break;
          }
          case 58: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::DistributedMatchEngine.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 66: {
            CustomEvent = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ClientEdgeEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ClientEventType {
        [pbr::OriginalName("EVENT_UNKNOWN")] EventUnknown = 0,
        [pbr::OriginalName("EVENT_INIT_CONNECTION")] EventInitConnection = 1,
        [pbr::OriginalName("EVENT_TERMINATE_CONNECTION")] EventTerminateConnection = 2,
        [pbr::OriginalName("EVENT_LATENCY_SAMPLES")] EventLatencySamples = 3,
        [pbr::OriginalName("EVENT_LOCATION_UPDATE")] EventLocationUpdate = 4,
        [pbr::OriginalName("EVENT_CUSTOM_EVENT")] EventCustomEvent = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Message from DME to SDK
  /// </summary>
  public sealed partial class ServerEdgeEvent : pb::IMessage<ServerEdgeEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerEdgeEvent> _parser = new pb::MessageParser<ServerEdgeEvent>(() => new ServerEdgeEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerEdgeEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.AppClientReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerEdgeEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerEdgeEvent(ServerEdgeEvent other) : this() {
      eventType_ = other.eventType_;
      cloudletState_ = other.cloudletState_;
      maintenanceState_ = other.maintenanceState_;
      healthCheck_ = other.healthCheck_;
      statistics_ = other.statistics_ != null ? other.statistics_.Clone() : null;
      newCloudlet_ = other.newCloudlet_ != null ? other.newCloudlet_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerEdgeEvent Clone() {
      return new ServerEdgeEvent(this);
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType eventType_ = global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "cloudlet_state" field.</summary>
    public const int CloudletStateFieldNumber = 2;
    private global::DistributedMatchEngine.CloudletState cloudletState_ = global::DistributedMatchEngine.CloudletState.Unknown;
    /// <summary>
    /// Cloudlet state information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.CloudletState CloudletState {
      get { return cloudletState_; }
      set {
        cloudletState_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_state" field.</summary>
    public const int MaintenanceStateFieldNumber = 3;
    private global::DistributedMatchEngine.MaintenanceState maintenanceState_ = global::DistributedMatchEngine.MaintenanceState.NormalOperation;
    /// <summary>
    /// Cloudlet maintenance state information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.MaintenanceState MaintenanceState {
      get { return maintenanceState_; }
      set {
        maintenanceState_ = value;
      }
    }

    /// <summary>Field number for the "health_check" field.</summary>
    public const int HealthCheckFieldNumber = 4;
    private global::DistributedMatchEngine.HealthCheck healthCheck_ = global::DistributedMatchEngine.HealthCheck.Unknown;
    /// <summary>
    /// AppInst health state information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.HealthCheck HealthCheck {
      get { return healthCheck_; }
      set {
        healthCheck_ = value;
      }
    }

    /// <summary>Field number for the "statistics" field.</summary>
    public const int StatisticsFieldNumber = 5;
    private global::DistributedMatchEngine.Statistics statistics_;
    /// <summary>
    /// Summarized RTT Latency statis from samples provided from client if event_type is EVENT_LATENCY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Statistics Statistics {
      get { return statistics_; }
      set {
        statistics_ = value;
      }
    }

    /// <summary>Field number for the "new_cloudlet" field.</summary>
    public const int NewCloudletFieldNumber = 6;
    private global::DistributedMatchEngine.FindCloudletReply newCloudlet_;
    /// <summary>
    /// New and closer cloudlet if event_type is EVENT_CLOUDLET_UPDATE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.FindCloudletReply NewCloudlet {
      get { return newCloudlet_; }
      set {
        newCloudlet_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerEdgeEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerEdgeEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (CloudletState != other.CloudletState) return false;
      if (MaintenanceState != other.MaintenanceState) return false;
      if (HealthCheck != other.HealthCheck) return false;
      if (!object.Equals(Statistics, other.Statistics)) return false;
      if (!object.Equals(NewCloudlet, other.NewCloudlet)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown) hash ^= EventType.GetHashCode();
      if (CloudletState != global::DistributedMatchEngine.CloudletState.Unknown) hash ^= CloudletState.GetHashCode();
      if (MaintenanceState != global::DistributedMatchEngine.MaintenanceState.NormalOperation) hash ^= MaintenanceState.GetHashCode();
      if (HealthCheck != global::DistributedMatchEngine.HealthCheck.Unknown) hash ^= HealthCheck.GetHashCode();
      if (statistics_ != null) hash ^= Statistics.GetHashCode();
      if (newCloudlet_ != null) hash ^= NewCloudlet.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventType != global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (CloudletState != global::DistributedMatchEngine.CloudletState.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CloudletState);
      }
      if (MaintenanceState != global::DistributedMatchEngine.MaintenanceState.NormalOperation) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MaintenanceState);
      }
      if (HealthCheck != global::DistributedMatchEngine.HealthCheck.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) HealthCheck);
      }
      if (statistics_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Statistics);
      }
      if (newCloudlet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(NewCloudlet);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventType != global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (CloudletState != global::DistributedMatchEngine.CloudletState.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CloudletState);
      }
      if (MaintenanceState != global::DistributedMatchEngine.MaintenanceState.NormalOperation) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MaintenanceState);
      }
      if (HealthCheck != global::DistributedMatchEngine.HealthCheck.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) HealthCheck);
      }
      if (statistics_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Statistics);
      }
      if (newCloudlet_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(NewCloudlet);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (CloudletState != global::DistributedMatchEngine.CloudletState.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CloudletState);
      }
      if (MaintenanceState != global::DistributedMatchEngine.MaintenanceState.NormalOperation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MaintenanceState);
      }
      if (HealthCheck != global::DistributedMatchEngine.HealthCheck.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HealthCheck);
      }
      if (statistics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Statistics);
      }
      if (newCloudlet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewCloudlet);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerEdgeEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventType != global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType.EventUnknown) {
        EventType = other.EventType;
      }
      if (other.CloudletState != global::DistributedMatchEngine.CloudletState.Unknown) {
        CloudletState = other.CloudletState;
      }
      if (other.MaintenanceState != global::DistributedMatchEngine.MaintenanceState.NormalOperation) {
        MaintenanceState = other.MaintenanceState;
      }
      if (other.HealthCheck != global::DistributedMatchEngine.HealthCheck.Unknown) {
        HealthCheck = other.HealthCheck;
      }
      if (other.statistics_ != null) {
        if (statistics_ == null) {
          Statistics = new global::DistributedMatchEngine.Statistics();
        }
        Statistics.MergeFrom(other.Statistics);
      }
      if (other.newCloudlet_ != null) {
        if (newCloudlet_ == null) {
          NewCloudlet = new global::DistributedMatchEngine.FindCloudletReply();
        }
        NewCloudlet.MergeFrom(other.NewCloudlet);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType) input.ReadEnum();
            break;
          }
          case 16: {
            CloudletState = (global::DistributedMatchEngine.CloudletState) input.ReadEnum();
            break;
          }
          case 24: {
            MaintenanceState = (global::DistributedMatchEngine.MaintenanceState) input.ReadEnum();
            break;
          }
          case 32: {
            HealthCheck = (global::DistributedMatchEngine.HealthCheck) input.ReadEnum();
            break;
          }
          case 42: {
            if (statistics_ == null) {
              Statistics = new global::DistributedMatchEngine.Statistics();
            }
            input.ReadMessage(Statistics);
            break;
          }
          case 50: {
            if (newCloudlet_ == null) {
              NewCloudlet = new global::DistributedMatchEngine.FindCloudletReply();
            }
            input.ReadMessage(NewCloudlet);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EventType = (global::DistributedMatchEngine.ServerEdgeEvent.Types.ServerEventType) input.ReadEnum();
            break;
          }
          case 16: {
            CloudletState = (global::DistributedMatchEngine.CloudletState) input.ReadEnum();
            break;
          }
          case 24: {
            MaintenanceState = (global::DistributedMatchEngine.MaintenanceState) input.ReadEnum();
            break;
          }
          case 32: {
            HealthCheck = (global::DistributedMatchEngine.HealthCheck) input.ReadEnum();
            break;
          }
          case 42: {
            if (statistics_ == null) {
              Statistics = new global::DistributedMatchEngine.Statistics();
            }
            input.ReadMessage(Statistics);
            break;
          }
          case 50: {
            if (newCloudlet_ == null) {
              NewCloudlet = new global::DistributedMatchEngine.FindCloudletReply();
            }
            input.ReadMessage(NewCloudlet);
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServerEdgeEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ServerEventType {
        [pbr::OriginalName("EVENT_UNKNOWN")] EventUnknown = 0,
        [pbr::OriginalName("EVENT_INIT_CONNECTION")] EventInitConnection = 1,
        [pbr::OriginalName("EVENT_LATENCY_REQUEST")] EventLatencyRequest = 2,
        [pbr::OriginalName("EVENT_LATENCY_PROCESSED")] EventLatencyProcessed = 3,
        [pbr::OriginalName("EVENT_CLOUDLET_STATE")] EventCloudletState = 4,
        [pbr::OriginalName("EVENT_CLOUDLET_MAINTENANCE")] EventCloudletMaintenance = 5,
        [pbr::OriginalName("EVENT_APPINST_HEALTH")] EventAppinstHealth = 6,
        [pbr::OriginalName("EVENT_CLOUDLET_UPDATE")] EventCloudletUpdate = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
