// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: loc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DistributedMatchEngine {

  /// <summary>Holder for reflection information generated from loc.proto</summary>
  public static partial class LocReflection {

    #region Descriptor
    /// <summary>File descriptor for loc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LocReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cglsb2MucHJvdG8SGGRpc3RyaWJ1dGVkX21hdGNoX2VuZ2luZSIrCglUaW1l",
            "c3RhbXASDwoHc2Vjb25kcxgBIAEoAxINCgVuYW5vcxgCIAEoBSLLAQoDTG9j",
            "EhAKCGxhdGl0dWRlGAEgASgBEhEKCWxvbmdpdHVkZRgCIAEoARIbChNob3Jp",
            "em9udGFsX2FjY3VyYWN5GAMgASgBEhkKEXZlcnRpY2FsX2FjY3VyYWN5GAQg",
            "ASgBEhAKCGFsdGl0dWRlGAUgASgBEg4KBmNvdXJzZRgGIAEoARINCgVzcGVl",
            "ZBgHIAEoARI2Cgl0aW1lc3RhbXAYCCABKAsyIy5kaXN0cmlidXRlZF9tYXRj",
            "aF9lbmdpbmUuVGltZXN0YW1wIpUCCgZTYW1wbGUSDQoFdmFsdWUYASABKAES",
            "KgoDbG9jGAIgASgLMh0uZGlzdHJpYnV0ZWRfbWF0Y2hfZW5naW5lLkxvYxIW",
            "Cg5zZXNzaW9uX2Nvb2tpZRgEIAEoCRIZChFkYXRhX25ldHdvcmtfdHlwZRgF",
            "IAEoCRI2Cgl0aW1lc3RhbXAYAyABKAsyIy5kaXN0cmlidXRlZF9tYXRjaF9l",
            "bmdpbmUuVGltZXN0YW1wEjgKBHRhZ3MYZCADKAsyKi5kaXN0cmlidXRlZF9t",
            "YXRjaF9lbmdpbmUuU2FtcGxlLlRhZ3NFbnRyeRorCglUYWdzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASKgAQoHTGF0ZW5jeRILCgNh",
            "dmcYASABKAESCwoDbWluGAIgASgBEgsKA21heBgDIAEoARIPCgdzdGRfZGV2",
            "GAQgASgBEhAKCHZhcmlhbmNlGAUgASgBEhMKC251bV9zYW1wbGVzGAYgASgE",
            "EjYKCXRpbWVzdGFtcBgHIAEoCzIjLmRpc3RyaWJ1dGVkX21hdGNoX2VuZ2lu",
            "ZS5UaW1lc3RhbXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Timestamp), global::DistributedMatchEngine.Timestamp.Parser, new[]{ "Seconds", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Loc), global::DistributedMatchEngine.Loc.Parser, new[]{ "Latitude", "Longitude", "HorizontalAccuracy", "VerticalAccuracy", "Altitude", "Course", "Speed", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Sample), global::DistributedMatchEngine.Sample.Parser, new[]{ "Value", "Loc", "SessionCookie", "DataNetworkType", "Timestamp", "Tags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DistributedMatchEngine.Latency), global::DistributedMatchEngine.Latency.Parser, new[]{ "Avg", "Min", "Max", "StdDev", "Variance", "NumSamples", "Timestamp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// This is a simple Timestamp message type
  /// grpc-gateway converts google.protobuf.Timestamp into an RFC3339-type string
  /// which is a waste of a conversion, so we define our own
  /// </summary>
  public sealed partial class Timestamp : pb::IMessage<Timestamp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Timestamp> _parser = new pb::MessageParser<Timestamp>(() => new Timestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Timestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.LocReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamp(Timestamp other) : this() {
      seconds_ = other.seconds_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Timestamp Clone() {
      return new Timestamp(this);
    }

    /// <summary>Field number for the "seconds" field.</summary>
    public const int SecondsFieldNumber = 1;
    private long seconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seconds {
      get { return seconds_; }
      set {
        seconds_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Timestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Timestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seconds != other.Seconds) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seconds != 0L) hash ^= Seconds.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Seconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Seconds);
      }
      if (Nanos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Seconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Seconds);
      }
      if (Nanos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seconds);
      }
      if (Nanos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nanos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Timestamp other) {
      if (other == null) {
        return;
      }
      if (other.Seconds != 0L) {
        Seconds = other.Seconds;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seconds = input.ReadInt64();
            break;
          }
          case 16: {
            Nanos = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seconds = input.ReadInt64();
            break;
          }
          case 16: {
            Nanos = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// GPS Location
  /// </summary>
  public sealed partial class Loc : pb::IMessage<Loc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Loc> _parser = new pb::MessageParser<Loc>(() => new Loc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Loc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.LocReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc(Loc other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      horizontalAccuracy_ = other.horizontalAccuracy_;
      verticalAccuracy_ = other.verticalAccuracy_;
      altitude_ = other.altitude_;
      course_ = other.course_;
      speed_ = other.speed_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Loc Clone() {
      return new Loc(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    /// <summary>
    /// latitude in WGS 84 coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    /// <summary>
    /// longitude in WGS 84 coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_accuracy" field.</summary>
    public const int HorizontalAccuracyFieldNumber = 3;
    private double horizontalAccuracy_;
    /// <summary>
    /// horizontal accuracy (radius in meters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HorizontalAccuracy {
      get { return horizontalAccuracy_; }
      set {
        horizontalAccuracy_ = value;
      }
    }

    /// <summary>Field number for the "vertical_accuracy" field.</summary>
    public const int VerticalAccuracyFieldNumber = 4;
    private double verticalAccuracy_;
    /// <summary>
    /// vertical accuracy (meters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double VerticalAccuracy {
      get { return verticalAccuracy_; }
      set {
        verticalAccuracy_ = value;
      }
    }

    /// <summary>Field number for the "altitude" field.</summary>
    public const int AltitudeFieldNumber = 5;
    private double altitude_;
    /// <summary>
    /// On android only lat and long are guaranteed to be supplied
    /// altitude in meters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    /// <summary>Field number for the "course" field.</summary>
    public const int CourseFieldNumber = 6;
    private double course_;
    /// <summary>
    /// course (IOS) / bearing (Android) (degrees east relative to true north)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Course {
      get { return course_; }
      set {
        course_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 7;
    private double speed_;
    /// <summary>
    /// speed (IOS) / velocity (Android) (meters/sec)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 8;
    private global::DistributedMatchEngine.Timestamp timestamp_;
    /// <summary>
    /// timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Loc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Loc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HorizontalAccuracy, other.HorizontalAccuracy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(VerticalAccuracy, other.VerticalAccuracy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Altitude, other.Altitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Course, other.Course)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (HorizontalAccuracy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HorizontalAccuracy);
      if (VerticalAccuracy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(VerticalAccuracy);
      if (Altitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Altitude);
      if (Course != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Course);
      if (Speed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Speed);
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (HorizontalAccuracy != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(HorizontalAccuracy);
      }
      if (VerticalAccuracy != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VerticalAccuracy);
      }
      if (Altitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Altitude);
      }
      if (Course != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Course);
      }
      if (Speed != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Speed);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (HorizontalAccuracy != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(HorizontalAccuracy);
      }
      if (VerticalAccuracy != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(VerticalAccuracy);
      }
      if (Altitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Altitude);
      }
      if (Course != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Course);
      }
      if (Speed != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Speed);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (HorizontalAccuracy != 0D) {
        size += 1 + 8;
      }
      if (VerticalAccuracy != 0D) {
        size += 1 + 8;
      }
      if (Altitude != 0D) {
        size += 1 + 8;
      }
      if (Course != 0D) {
        size += 1 + 8;
      }
      if (Speed != 0D) {
        size += 1 + 8;
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Loc other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.HorizontalAccuracy != 0D) {
        HorizontalAccuracy = other.HorizontalAccuracy;
      }
      if (other.VerticalAccuracy != 0D) {
        VerticalAccuracy = other.VerticalAccuracy;
      }
      if (other.Altitude != 0D) {
        Altitude = other.Altitude;
      }
      if (other.Course != 0D) {
        Course = other.Course;
      }
      if (other.Speed != 0D) {
        Speed = other.Speed;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::DistributedMatchEngine.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            HorizontalAccuracy = input.ReadDouble();
            break;
          }
          case 33: {
            VerticalAccuracy = input.ReadDouble();
            break;
          }
          case 41: {
            Altitude = input.ReadDouble();
            break;
          }
          case 49: {
            Course = input.ReadDouble();
            break;
          }
          case 57: {
            Speed = input.ReadDouble();
            break;
          }
          case 66: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            HorizontalAccuracy = input.ReadDouble();
            break;
          }
          case 33: {
            VerticalAccuracy = input.ReadDouble();
            break;
          }
          case 41: {
            Altitude = input.ReadDouble();
            break;
          }
          case 49: {
            Course = input.ReadDouble();
            break;
          }
          case 57: {
            Speed = input.ReadDouble();
            break;
          }
          case 66: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Latency Sample
  /// </summary>
  public sealed partial class Sample : pb::IMessage<Sample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sample> _parser = new pb::MessageParser<Sample>(() => new Sample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.LocReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sample(Sample other) : this() {
      value_ = other.value_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      sessionCookie_ = other.sessionCookie_;
      dataNetworkType_ = other.dataNetworkType_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sample Clone() {
      return new Sample(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    /// <summary>
    /// latency value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::DistributedMatchEngine.Loc loc_;
    /// <summary>
    /// gps location
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Loc Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "session_cookie" field.</summary>
    public const int SessionCookieFieldNumber = 4;
    private string sessionCookie_ = "";
    /// <summary>
    /// session cookie to differentiate clients
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCookie {
      get { return sessionCookie_; }
      set {
        sessionCookie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_network_type" field.</summary>
    public const int DataNetworkTypeFieldNumber = 5;
    private string dataNetworkType_ = "";
    /// <summary>
    /// LTE, 5G, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataNetworkType {
      get { return dataNetworkType_; }
      set {
        dataNetworkType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::DistributedMatchEngine.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 802);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// _(optional)_ Vendor specific data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      if (SessionCookie != other.SessionCookie) return false;
      if (DataNetworkType != other.DataNetworkType) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (SessionCookie.Length != 0) hash ^= SessionCookie.GetHashCode();
      if (DataNetworkType.Length != 0) hash ^= DataNetworkType.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionCookie);
      }
      if (DataNetworkType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DataNetworkType);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      if (SessionCookie.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionCookie);
      }
      if (DataNetworkType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DataNetworkType);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (SessionCookie.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCookie);
      }
      if (DataNetworkType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataNetworkType);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sample other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::DistributedMatchEngine.Loc();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.SessionCookie.Length != 0) {
        SessionCookie = other.SessionCookie;
      }
      if (other.DataNetworkType.Length != 0) {
        DataNetworkType = other.DataNetworkType;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::DistributedMatchEngine.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            SessionCookie = input.ReadString();
            break;
          }
          case 42: {
            DataNetworkType = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::DistributedMatchEngine.Loc();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            SessionCookie = input.ReadString();
            break;
          }
          case 42: {
            DataNetworkType = input.ReadString();
            break;
          }
          case 802: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Latency
  /// </summary>
  public sealed partial class Latency : pb::IMessage<Latency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Latency> _parser = new pb::MessageParser<Latency>(() => new Latency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Latency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DistributedMatchEngine.LocReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Latency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Latency(Latency other) : this() {
      avg_ = other.avg_;
      min_ = other.min_;
      max_ = other.max_;
      stdDev_ = other.stdDev_;
      variance_ = other.variance_;
      numSamples_ = other.numSamples_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Latency Clone() {
      return new Latency(this);
    }

    /// <summary>Field number for the "avg" field.</summary>
    public const int AvgFieldNumber = 1;
    private double avg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Avg {
      get { return avg_; }
      set {
        avg_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private double min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private double max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "std_dev" field.</summary>
    public const int StdDevFieldNumber = 4;
    private double stdDev_;
    /// <summary>
    /// Square root of unbiased variance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StdDev {
      get { return stdDev_; }
      set {
        stdDev_ = value;
      }
    }

    /// <summary>Field number for the "variance" field.</summary>
    public const int VarianceFieldNumber = 5;
    private double variance_;
    /// <summary>
    /// Unbiased variance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Variance {
      get { return variance_; }
      set {
        variance_ = value;
      }
    }

    /// <summary>Field number for the "num_samples" field.</summary>
    public const int NumSamplesFieldNumber = 6;
    private ulong numSamples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NumSamples {
      get { return numSamples_; }
      set {
        numSamples_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private global::DistributedMatchEngine.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DistributedMatchEngine.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Latency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Latency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Avg, other.Avg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Min, other.Min)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Max, other.Max)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StdDev, other.StdDev)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Variance, other.Variance)) return false;
      if (NumSamples != other.NumSamples) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Avg != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Avg);
      if (Min != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Min);
      if (Max != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Max);
      if (StdDev != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StdDev);
      if (Variance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Variance);
      if (NumSamples != 0UL) hash ^= NumSamples.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Avg != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Avg);
      }
      if (Min != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (StdDev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(StdDev);
      }
      if (Variance != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Variance);
      }
      if (NumSamples != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(NumSamples);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Avg != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Avg);
      }
      if (Min != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Min);
      }
      if (Max != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Max);
      }
      if (StdDev != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(StdDev);
      }
      if (Variance != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Variance);
      }
      if (NumSamples != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(NumSamples);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Avg != 0D) {
        size += 1 + 8;
      }
      if (Min != 0D) {
        size += 1 + 8;
      }
      if (Max != 0D) {
        size += 1 + 8;
      }
      if (StdDev != 0D) {
        size += 1 + 8;
      }
      if (Variance != 0D) {
        size += 1 + 8;
      }
      if (NumSamples != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumSamples);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Latency other) {
      if (other == null) {
        return;
      }
      if (other.Avg != 0D) {
        Avg = other.Avg;
      }
      if (other.Min != 0D) {
        Min = other.Min;
      }
      if (other.Max != 0D) {
        Max = other.Max;
      }
      if (other.StdDev != 0D) {
        StdDev = other.StdDev;
      }
      if (other.Variance != 0D) {
        Variance = other.Variance;
      }
      if (other.NumSamples != 0UL) {
        NumSamples = other.NumSamples;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::DistributedMatchEngine.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Avg = input.ReadDouble();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            StdDev = input.ReadDouble();
            break;
          }
          case 41: {
            Variance = input.ReadDouble();
            break;
          }
          case 48: {
            NumSamples = input.ReadUInt64();
            break;
          }
          case 58: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Avg = input.ReadDouble();
            break;
          }
          case 17: {
            Min = input.ReadDouble();
            break;
          }
          case 25: {
            Max = input.ReadDouble();
            break;
          }
          case 33: {
            StdDev = input.ReadDouble();
            break;
          }
          case 41: {
            Variance = input.ReadDouble();
            break;
          }
          case 48: {
            NumSamples = input.ReadUInt64();
            break;
          }
          case 58: {
            if (timestamp_ == null) {
              Timestamp = new global::DistributedMatchEngine.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
